fct = W2.3())
# Ajustar modelo log-logístico 3 parâmetros (LL.3)
m_ll3 <- drm(germination ~ dose,
data = FGT43,
fct = LL.3())
# Comparar AIC para escolher o melhor modelo
AIC(m_wb)
AIC(m_ll3)
# Resumo do melhor modelo (exemplo: LL.3)
summary(m_ll3)
# Plotar ajuste do modelo LL.3
plot(m_ll3, main = "Ajuste do modelo LL.3 para FGT43")
# Estimar EC50 (dose para 50% do efeito)
ED(m_ll3, 50, interval = "delta")
# Instale o pacote se ainda não tiver: install.packages("ec50estimator")
library(ec50estimator)
# Estima EC50 para cada fungo (isolate_col = "code"), podendo estratificar por estado (strata_col)
df_ec50 <- estimate_EC50(germination ~ dose,
data = fungi,
isolate_col = "code",
strata_col = "state",  # pode omitir se não tiver
interval = "delta",
fct = drc::LL.3())
library(ggplot2)
# Gráfico de pontos ordenando pelo valor da estimativa (menor para maior EC50)
df_ec50 |>
ggplot(aes(x = reorder(ID, Estimate), y = Estimate)) +
geom_point() +
coord_flip() +
labs(x = "Fungos (ordenados por EC50)", y = "EC50 estimado") +
theme_minimal()
# Histograma da distribuição dos valores EC50
df_ec50 |>
ggplot(aes(x = Estimate)) +
geom_histogram(bins = 5, color = "black", fill = "steelblue") +
labs(title = "Distribuição dos valores EC50 estimados", x = "EC50", y = "Frequência") +
theme_minimal()
#Carregando pacotes
library(ggplot2)
library(gsheet)
library(dplyr)
#importando o comjunto de dados
dat <- gsheet2tbl("https://docs.google.com/spreadsheets/d/15pCj0zljvd-TGECe67OMt6sa21xO8BqUgv4d-kU8qi8/edit#gid=0")
options(scipen = 999)
dat2 <- dat |>
dplyr::select(-Isolate, Population) |>
group_by(Code, Year, Dose) |>
summarise(GC_mean = mean(GC), .groups = "drop")
FGT152 <- dat2 |>
filter(Code == "FGT152")
FGT152 |>
ggplot(aes(factor(Dose), GC_mean))+
geom_point()+
geom_line()+
facet_wrap(~ Code)
library(drc)
drc1 <- drm(GC_mean ~ Dose, data = FGT152,
fct = LL.3())
AIC(drc1)
summary(drc1)
plot(drc1)
ED(drc1, 50)
drc1 <- drm(GC_mean ~ Dose, data = FGT152,
fct = W1.3())
AIC(drc1)
summary(drc1)
plot(drc1)
ED(drc1, 50)
library(ec50estimator)
df_ec50 <- estimate_EC50(GC_mean ~ Dose,
data = dat2,
isolate_col = "Code",
interval = "delta",
fct = drc::LL.3())
df_ec50 |>
ggplot(aes(Estimate, reorder(ID, Estimate)))+
geom_point()+
geom_errorbar(aes(xmin = Lower,
xmax = Upper), width = 0.1)+
xlim(0,30)
library(tidyverse)
library(readxl)
library(ggplot2)
estande <- read_excel("dados-diversos.xlsx", "estande")
estande <- read_excel("dados.xlsx", "estande")
estande |>
ggplot(aes(trat, nplants))+
geom_point()+
facet_wrap(~ exp)+
ylim(0,max(estande$nplants))+
geom_smooth(se =  F)
estande2 <- estande |>
filter(exp ==2) |>
group_by(trat) |>
summarise(mean_nplants = mean(nplants))
estande2|>
ggplot(aes(trat, mean_nplants))+
geom_point()+
#geom_line()
geom_smooth(formula = y ~ poly(x, 2), method = "lm", color = "black")+
annotate(geom = "text",
x = 25, y = 70,
label = "y = 66.3 - 1.777x + 0.0222x2
R2 = 0.0.88")
estande2 <- estande2 |>
mutate(trat2 = trat^2)
m1 <- lm(mean_nplants ~ trat, data = estande2)
summary(m1)
hist(m1$residuals)
m2 <- lm(mean_nplants ~ trat + trat2,
data = estande2)
summary(m2)
AIC(m1, m2)
mofo <- read_excel("dados.xlsx", "mofo")
mofo |>
ggplot(aes(inc, yld))+
geom_point()+
geom_smooth(se = F, method = "lm")+
facet_wrap(~ study)
mofo1 <- mofo |>
filter(study ==1)
mofo1
cor.test(mofo1$inc, mofo1$yld)
mofo1 <- mofo |>
filter(study ==2)
mofo1
cor.test(mofo1$inc, mofo1$yld)
mofo1 <- mofo |>
filter(study ==4)
mofo1
cor.test(mofo1$inc, mofo1$yld)
mofo1 <- mofo |>
filter(study ==3)
mofo1
mofo1 <- mofo |>
filter(study ==3)
mofo1
cor.test(mofo1$inc, mofo1$yld)
library(dplyr)
cor(mofo1[, 3:5])
mofo1 <- mofo |>
filter(study ==3)
mofo1
cor.test(mofo1$inc, mofo1$yld)
pcor <- cor(mofo1[, 3:5])
library(corrplot)
corrplot(pcor, method = 'number', type = "lower")
mofo1 <- mofo |>
filter(study ==3)
mofo1
shapiro.test(mofo1$inc)
shapiro.test(mofo1$yld)
cor.test(mofo1$inc, mofo1$yld, method = "spearman")
pcor <- cor(mofo1[, 3:5], method = "spearman")
library(corrplot)
corrplot(pcor, method = 'number', type = "lower")
#Carregando pacotes
library(tidyverse)
library(readxl)
library(janitor)
library(ggplot2)
library(dplyr)
library(rstatix)
#Importando dados
survey <- read_excel("dados-diversos.xlsx","survey")
#Carregando pacotes
library(tidyverse)
library(readxl)
library(janitor)
library(ggplot2)
library(dplyr)
library(rstatix)
#Importando dados
survey <- read_excel("dados.xlsx","survey")
survey |>
tabyl (year, species) |>
adorn_percentages()
survey |>
filter(residue != "NA") |>
count(residue, species) |>
ggplot(aes(residue, n, fill = species)) +
geom_col() +
scale_fill_brewer(palette = "Greens") +
theme_minimal() +
labs(x = "Resíduo", y = "Frequência", fill = "Espécie")
q <- table (survey$residue, survey$species)
chisq.test(q)
fisher.test(q)
q <- table (survey$residue, survey$inc_class)
chisq.test(q)
survey |>
filter(residue != "NA") |>
count(residue, inc_class) |>
ggplot(aes(residue, n, fill = inc_class)) +
geom_col() +
scale_fill_brewer(palette = "Greens") +
theme_minimal() +
labs(
x = "Resíduo",
y = "Frequência",
fill = "Classe de Incidência"
)
survey |> count (year)
#Frequência de ocorrência por ano
table (survey$year, survey$species)
curve <- read_excel("dados.xlsx","curve")
curve2 <- curve |>
group_by(Irrigation, day) |>
summarise(mean_severity = mean (severity),
sd_severity = sd(severity))
curve2 |> ggplot(aes(day,mean_severity, color=Irrigation))+
geom_point()+
geom_line()
curve2 |> ggplot(aes(day,mean_severity, color=Irrigation))+
geom_point()+
geom_errorbar(aes(ymin=mean_severity - sd_severity,
ymax = mean_severity + sd_severity),
width = 0.1)+
geom_line()
library(epifitter)
curve3 <- curve |>
group_by(Irrigation, rep) |>
summarise(audpc = AUDPC(day, severity,
y_proportion = F)) |>
pivot_wider(1, names_from = Irrigation,
values_from = audpc)
t.test(curve3$Drip, curve$Furrow)
library(gsheet)
tw <- gsheet2tbl("https://docs.google.com/spreadsheets/d/1t5xftb0xSRPNFhM7h_MiPNtwt2UFUcm9/edit#gid=1594889893")
tw |>
group_by(cult,silicio,hai) |>
summarise (mean_lesion = mean (as.numeric(lesion_size)),
sd_lesion = sd(lesion_size)) |>
ggplot(aes(hai,mean_lesion, color = silicio))+
geom_line()+
geom_point()+
geom_errorbar(aes(ymin=mean_lesion - sd_lesion,
ymax = mean_lesion + sd_lesion),
width = 0.1)+
facet_wrap(~cult)+
labs (y = "Lesion size (mm)", x = "Hours after inoculation")+
ggthemes::theme_few()+
scale_color_manual(values = c("#1f78b4", "#6baed6", "#9ecae1", "#c6dbef"))
library(agricolae)
library(dplyr)
tw2 <- tw |>
group_by(exp,cult,silicio,rep) |>
summarise(audpc=audpc(lesion_size, hai)) |>
filter (audpc > 0)
#Visualização com ggplot2
#Aplicando a AUDPC e visualizando em boxplot
tw2 |>
ggplot(aes(cult,audpc, color = silicio))+
geom_boxplot()+
facet_wrap(~ exp)
aov1 <- aov(sqrt(audpc) ~exp*cult*silicio, data = tw2)
summary(aov1)
library(performance)
check_normality(aov1)
check_heteroscedasticity(aov1)
library(emmeans)
m1 <- emmeans (aov1, ~cult | silicio, type = "response")
# Tabela de frequência
tab <- table(survey$residue, survey$species)
# Teste qui-quadrado
chisq.test(tab)
# Visualização
library(ggplot2)
survey |>
count(residue, species) |>
ggplot(aes(residue, n, fill = species)) +
geom_col(position = "dodge") +
scale_fill_manual(values = c("#2171b5", "#6baed6", "#9ecae1", "#c6dbef")) +
labs(x = "Resíduo", y = "Frequência", fill = "Espécie") +
theme_minimal()
library(tidyverse)
library(readxl)
library(ExpDes.pt)
# Carregue o pacote
library(ExpDes.pt)
# Fator: tratamentos (cultivares)
trat <- c(rep("A", 4), rep("B", 4), rep("C", 4), rep("D", 4))
# Resposta: produtividade em kg/ha
resp <- c(5000, 5200, 5100, 4950,
5300, 5400, 5350, 5250,
4800, 4700, 4900, 4750,
5100, 5000, 4950, 5050)
dic(trat, resp, quali = TRUE, mcomp = "tukey", sigT = 0.05)
insects <- InsectSprays
insects$count2 <- sqrt(insects$count)
dic(insects$spray,
insects$count2,
mcomp = "tukey")
#Agrupamento pelo teste de Scott Knott: O teste agrupa médias e serve para 1 fator apenas.
dic(insects$spray,
insects$count2,
mcomp = "sk")
# Tratamentos (cultivares)
trat <- c(rep("A",4), rep("B",4), rep("C",4), rep("D",4), rep("E",4))
# Blocos (repetições)
bloco <- rep(1:4, 5)
# Produtividade em kg/ha (variável resposta)
resp <- c(1800, 1850, 1750, 1820,  # A
2100, 2150, 2080, 2120,  # B
1700, 1680, 1720, 1690,  # C
1950, 1980, 1930, 1970,  # D
2200, 2250, 2220, 2180)  # E
dbc(trat, bloco, resp, quali = TRUE, mcomp = "sk", sigT = 0.05)
library(gsheet)
cr <- gsheet2tbl("https://docs.google.com/spreadsheets/d/1bq2N19DcZdtax2fQW9OHSGMR0X2__Z9T/edit?gid=1871397229#gid=1871397229")
library(DT)  #cria uma tabela interativa
datatable(cr) #função do pacote DT
library(tidyverse)
cr |> # Criar um gráfico
ggplot(aes(lon, lat)) +
geom_point()
library(rnaturalearth) # Baixar esse pacote
library(rnaturalearthhires) # Baixar esse pacote atraves do link abaixo
library(terra) # As vezes para gerar o gráfico é necessário baixar esses 2 programas.
library(sf) # sf = simplificado
remotes::install_github("ropensci/rnaturalearthhires") # Pegou link do google
ETH <- ne_states(country = "Ethiopia", # Criar data frame com esses dados
returnclass = "sf")
library(tidyverse) # Gerar mapas
library(ggthemes)
library(ggspatial)
ETH |> # ETH = state, estado ou provincia
ggplot()+
geom_sf(fill = "grey90")+ # Cor do fundo
geom_point(data = cr, aes(lon, lat, color = inc))+
scale_color_viridis_c()+ # Escala de cores com gradiente de intensidade
##theme_void() # Deixa mapa todo branco, limpo
#theme_map() + # Do pacote ggthemes, mesma função do theme_void
theme_minimal()+ # Olha esse temas no google
theme(legend.position = "bottom")+ # Colocar legenda embaixo, a escala de cor da incidência vai ficar abaixo ao invés do lado do mapa
annotation_scale(location = "tl")+ # Para adicionar escala
annotation_north_arrow(location = "br", which_north = "true")+ # Flecha indicando o norte
labs(title = "Ferrugem do Café na Etiópia",
x = "Longitude", y = "Latitude",
subtitle = "Levantamento em fazendas",
caption = "Fonte: Del ponte et al. (2025)",# Adicionar citação
color = "Incidência (%)")
ggsave("mapa_etiopia.png", bg = "white") # Para salvar como imagem
# Para salvar como pdf, # ggsave("mapa_etiopia.pdf", bg = "white")
BRA <- ne_states(country = "Brazil",
returnclass = "sf")
ggplot(BRA) +
geom_sf(color = "white",
fill = "darkgreen") +
theme_void()
BRA <- ne_states(country = "Brazil",
returnclass = "sf")
MG <- BRA |> filter(name_en == "Minas Gerais")
ggplot(BRA) +
geom_sf(color = "black",
fill = "white") +
geom_sf(data = MG, color = "black",
fill = "green")
library(readxl)
library(tidyverse)
dados <- read_excel("dados.xlsx", sheet = "sensibilidade_fungicidas")
dados
1 + 1
dados <- Orange
Orange
circ<-dados$circumference
circ2<-exp(circ)
circ2
circ3=log(circ2)
dados
dados$logcirc<-log(dados$circumference)
dados
attach(dados)
circumference
library(agricolae)
library(tidyverse)
dates <- c(14,21,28) # days
severity <- c(40,80,90)
severity
audpc(severity,dates)
data(corn)
corn
str(corn)
library(tidyverse)
dates <- c(7,14,21,28,35,42) # days
severity <- c(0.1,5,10,35,50,60)
data_curva<-data.frame(dates,severity)
data_curva
# meu primeiro plot
data_curva |>
mutate(severity2 = c(1,10,35,58,70,82)) |>
ggplot(aes(dates,severity2))+
geom_col()+
geom_line(linewidth = 2,color="blue")+
geom_point(size = 5)+
theme_classic(base_size = 14)+
labs(x="Dia após o plantio",
y="severidade(%)")+
scale_y_continuous(limits = c(0,100),n.breaks = 10)+
scale_x_continuous(n.breaks = 8)
data_curva |>
mutate(severity2 = c(1,10,35,58,70,82)) |>
ggplot(aes(dates, severity2)) +
geom_col(fill = "BLACK") +  # Barras em roxo
geom_line(linewidth = 2, color = "PURPLE") +  # Linha em roxo
geom_point(size = 5, color = "black") +  # Pontos em roxo
theme_classic(base_size = 14) +
labs(x = "Dia após o plantio",
y = "severidade(%)") +
scale_y_continuous(limits = c(0, 100), n.breaks = 10) +
scale_x_continuous(n.breaks = 8)
library(tidyverse)
library(readxl)
library(tidyverse)
dados <- read_excel("dados.xlsx", sheet = "sensibilidade_fungicidas")
dados
str (dados)
glimpse(dados)
dados2 <- read_excel("dados.xlsx",
sheet = "sensibilidade-fungicida")
str(dados2)
glimpse(dados2)
dados2 <- read_excel("dados.xlsx",
sheet = "Planilha1")
dados2
library(gsheet)
dados_nuvem <- gsheet2tbl("https://docs.google.com/spreadsheets/d/1bq2N19DcZdtax2fQW9OHSGMR0X2__Z9T/edit?gid=465348652#gid=465348652")
dados_mg <- gsheet2tbl("https://docs.google.com/spreadsheets/d/1bq2N19DcZdtax2fQW9OHSGMR0X2__Z9T/edit?gid=983033137#gid=983033137")
dados_survey <- gsheet2tbl("https://docs.google.com/spreadsheets/d/1bq2N19DcZdtax2fQW9OHSGMR0X2__Z9T/edit?gid=1118819738#gid=1118819738")
library(dplyr)
dados_survey |>
group_by(species) |>
count()
dados_survey |>
group_by(residue) |>
count()
dados_survey |>
group_by(state, residue) |>
count()
RS <- dados_survey |>
filter(state== "RS")
PR <- dados_survey |>
filter(state== "PR")
combinado <- rbind(RS, PR)
survey_b <- dados_survey |>
dplyr:: select(year, state, species)
survey_2009 <- dados_survey |>
dplyr:: select(year, state, species) |>
filter(year== 2009)
survey_2010 <- dados_survey |>
dplyr:: select(year, state, species) |>
filter(year== 2010)
survey_2011 <- dados_survey |>
dplyr:: select(year, state, species) |>
filter(year== 2011)
library(janitor)
survey_b |>
tabyl(state, species)
library(janitor)
survey_b |>
tabyl(species, year)
library(ggplot2)
survey_b |>
group_by(year, species) |>
count() |>
ggplot(aes(year, n, fill = species))+
geom_col()+
scale_fill_manual(values=c("Purple","yellow"))
survey_b |>
group_by(year, species) |>
count() |>
ggplot(aes(year, n, fill = species))+
geom_col()+
scale_fill_grey()
survey_b |>
group_by(year, species) |>
count() |>
ggplot(aes(year, n, fill = species, color= species))+
geom_col()+
scale_fill_viridis_d()
mg <- gsheet2tbl("https://docs.google.com/spreadsheets/d/1bq2N19DcZdtax2fQW9OHSGMR0X2__Z9T/edit?gid=983033137#gid=983033137")
library(ggplot2)
library(ggthemes)
plot_magnesio <- mg |>
ggplot(aes(trat, comp))+
geom_boxplot(fill = "white",
outlier.colour = NA)+
geom_jitter(width = 0.1)+
scale_y_continuous(limits = c(0,20) )+
labs(x= "Tratamento",
y= "Comprimento (mm)",
title = "Efeito do magnésio",
subtitle = "Tamanho da lesão de mancha",
caption = "Fonte (SILVA, I. S. et al. 2025")+
theme_clean()
plot_magnesio
micelial <- gsheet2tbl("https://docs.google.com/spreadsheets/d/1bq2N19DcZdtax2fQW9OHSGMR0X2__Z9T/edit?gid=959387827#gid=959387827")
library(ggplot2)
library(ggthemes) # Para usar o tema theme_clean()
plot_micelial <- micelial |>
ggplot(aes(x = reorder(especie, tcm), y = tcm)) +
geom_boxplot(fill = "white", outlier.colour = NA) +
geom_jitter(width = 0.1) +
coord_flip() +
labs(
x = "Espécie",
y = "TCM (mm)",
title = "Taxa de crescimento micelial",
caption = "Fonte: SILVA, I. S. et al. 2025"
) +
theme_clean()
plot_micelial
