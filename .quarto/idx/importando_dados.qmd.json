{"title":"importando_dados","markdown":{"yaml":{"title":"importando_dados","format":"html","editor":"visual"},"headingText":"Importando Dados no R","containsRefs":false,"markdown":"\n\n\nO R já vem com diversos conjuntos de dados internos que são muito úteis para prática, aprendizado e demonstração de técnicas estatísticas. Esses datasets incorporados permitem que o usuário teste funções e realize análises sem precisar buscar ou importar arquivos externos.\n\nUm exemplo clássico é o conjunto de dados **Orange**, que acompanha o crescimento de árvores de laranja ao longo do tempo. Esse dataset faz parte dos pacotes base do R, ou seja, já está disponível assim que o R é instalado.\n\nPara utilizá-lo, basta chamar o nome do conjunto de dados diretamente no R, sem a necessidade de importação externa. Assim, você pode explorar as informações e aplicar suas análises normalmente.\n\n```{r}\ndata(\"Orange\")\n```\n\nO conjunto de dados **Orange** está sendo copiado para um novo objeto chamado **dados**. O operador `<-` significa \"atribua o conteúdo de Orange ao objeto dados\". Assim, você pode trabalhar com os dados usando esse novo nome.\n\n```{r}\ndados <- Orange\ndados\n```\n\nPara salvar o conjunto de dados **Orange** em uma planilha Excel (.xlsx) no R, você pode utilizar o pacote **writexl**, que permite exportar data frames para arquivos Excel de forma prática e rápida.\n\n```{r}\nlibrary(writexl)\n\nwrite_xlsx(Orange, path = \"Orange.xlsx\")\n```\n\n## Dados em Formato Excel\n\nO pacote **readxl** é utilizado para importar planilhas do Excel para o R, convertendo-as em data frames que podem ser manipulados facilmente. Para usar suas funções, é necessário carregar o pacote antes.\n\nA função principal para essa tarefa é a **read_excel**, que lê o conteúdo da planilha.\n\nO primeiro argumento dessa função é o caminho do arquivo Excel que será importado. Esse caminho, incluindo o nome do arquivo e a extensão `.xlsx`, deve ser informado entre aspas duplas para que o R o reconheça corretamente.\n\n```{r}\nlibrary(dplyr)\nlibrary(tidyverse)\nlibrary(readxl)\ndados2 <- read_excel(\"dados.xlsx\",\n          sheet = \"sensibilidade_fungicidas\")\n\n#O argumento sheet = \"sensibilidade_fungicidas\" indica que você está lendo especificamente a aba (planilha) com esse nome dentro do arquivo Excel.\n\n#Ou dessa forma:\n\n#Pelo nome da aba → \"nome_da_aba\".\ndados2<- read_excel(\"dados.xlsx\", \"sensibilidade_fungicidas\")\n#Pela posição da aba → 1, 2, 3, etc.\ndados2 <- read_excel(\"dados.xlsx\", 2)\n\n\ndados2 <- dados2 |>\n\nmutate(dose = as.numeric(dose)) #O código transforma a coluna dose do objeto dados2 em formato numérico e salva essa versão modificada de volta no próprio dados2.\n\n#Isso porque na tabela a coluna dose não está como número.\n\n```\n\n## Dados em Planilhas Google\n\nPara importar dados de planilhas do Google Sheets no R, utiliza-se a função **read_gsheet**, que faz parte do pacote **gsheet**. Essa função lê a planilha diretamente a partir da URL (link) da planilha desejada, facilitando a importação sem precisar baixar o arquivo.\n\n```{r}\nlibrary(gsheet)\n\nsurvey <- gsheet2tbl(\"https://docs.google.com/spreadsheets/d/1bq2N19DcZdtax2fQW9OHSGMR0X2__Z9T/edit?gid=1118819738#gid=1118819738\")\n```\n\n## Usando o Argumento `text`\n\nUma maneira rápida de carregar dados no R é utilizando o argumento **text**. Basta copiar os dados diretamente de uma planilha (Ctrl + C) e colar dentro das aspas (`\"\"`) após o argumento `text` na função `read.table`. Isso permite importar pequenos conjuntos de dados sem precisar salvar arquivos externos.\n\nPor exemplo:\\\n`dados <- read.table(h = TRUE, text = \" \")`\n\n### Salvando Dados do R para Arquivos Excel ou CSV\n\nPara exportar dados do R, você pode salvar data frames em arquivos Excel ou CSV usando pacotes específicos, como `writexl` para Excel e funções base do R para CSV.\n\n```{r}\nlibrary(writexl)\n# write_xlsx() #Excel\n# write_csv() #Csv\n```\n\n## Verificando o Conjunto de Dados\n\nPara confirmar se os dados foram importados corretamente, podemos usar as funções **str()** e **glimpse()**.\n\n-    A função **str()** apresenta um resumo rápido da estrutura do objeto, mostrando o tipo, tamanho e os componentes, sendo útil para uma primeira exploração de data frames, listas ou vetores.\n\n-    A função **glimpse()**, do pacote **dplyr**, oferece uma visão compacta e organizada do conjunto de dados, exibindo o número de linhas e colunas, o tipo de cada variável (como numérico ou caractere) e os primeiros valores de cada coluna.\n\nAmbas ajudam a entender rapidamente o formato e o conteúdo dos dados carregados.\n\n```{r}\nstr(dados2) \nglimpse (dados2)\n```\n\n### Resumo Estatístico Detalhado com a Função `skim()`\n\nA função **skim()**, do pacote **skimr**, oferece um resumo estatístico mais completo dos dados. Ela apresenta informações como média, mediana, valores mínimos e máximos, além do número de valores ausentes (NA) em cada variável. Essa função é muito útil para uma análise exploratória inicial mais aprofundada.\n\n```{r}\nlibrary(skimr) #warning:false #message:false\nskim(dados2)\n```\n\n### Visualizando os Nomes das Colunas\n\nA função **names()** é utilizada para listar os nomes das colunas de um data frame. Isso ajuda a identificar claramente quais variáveis estão disponíveis para análise no conjunto de dados.\n\n```{r}\nnames(dados2)\n```\n\n## Trabalhando com Dados Importados\n\nApós importar os dados, é comum realizar algumas operações básicas para explorá-los e manipulá-los. A seguir, veja alguns exemplos simples que ilustram como começar a trabalhar com o seu conjunto de dados.\n\n```{r}\nlibrary(gsheet)\nsurvey <- gsheet2tbl(\"https://docs.google.com/spreadsheets/d/1bq2N19DcZdtax2fQW9OHSGMR0X2__Z9T/edit?gid=1118819738#gid=1118819738\")\n\nsurvey |>\n  group_by(state,residue) |>   # agrupar dentro dessa planilha\n  count()\n\nRS <- survey |>  # Para criar uma planilha de um subconjunto\n  filter(state == 'RS') # Filter é para selecionar linhas\nPR <- survey |>\n  filter(state == 'PR')\n\n\ncombinado <- rbind(RS,PR) # Combinar os dois conjuntos, um embaixo do outro\n\n```\n\n```{r}\nsurvey_b <- survey |>\n dplyr::select(year, state, species) # Para selecionar colunas de um arquivo. Usar os dois pontos para chamar o pacote dplyr sem carrega-lo.\n\nsurvey_b |>\n  group_by(year,species) |> \n  count() |>\n  ggplot(aes(year, n, fill = species))+ # fill é o preenchimento\n  geom_col()+\n  scale_fill_manual(values = c(\"red\", \"blue\")) #fazer escolha de cor manual\nggsave(\"espécies.png\") #para salvar a imagem\n\nsurvey_b |>\n  group_by(year,species) |> \n  count() |>\n  ggplot(aes(year, n, fill = species))+ #fill é o preenchimento, se colocar color depois do fill vai adicionar cor no controno das barras dos gráficos\n  geom_col()+\n  scale_fill_viridis_d()\n```\n\n![](espécies.png)\n","srcMarkdownNoYaml":"\n\n# Importando Dados no R\n\nO R já vem com diversos conjuntos de dados internos que são muito úteis para prática, aprendizado e demonstração de técnicas estatísticas. Esses datasets incorporados permitem que o usuário teste funções e realize análises sem precisar buscar ou importar arquivos externos.\n\nUm exemplo clássico é o conjunto de dados **Orange**, que acompanha o crescimento de árvores de laranja ao longo do tempo. Esse dataset faz parte dos pacotes base do R, ou seja, já está disponível assim que o R é instalado.\n\nPara utilizá-lo, basta chamar o nome do conjunto de dados diretamente no R, sem a necessidade de importação externa. Assim, você pode explorar as informações e aplicar suas análises normalmente.\n\n```{r}\ndata(\"Orange\")\n```\n\nO conjunto de dados **Orange** está sendo copiado para um novo objeto chamado **dados**. O operador `<-` significa \"atribua o conteúdo de Orange ao objeto dados\". Assim, você pode trabalhar com os dados usando esse novo nome.\n\n```{r}\ndados <- Orange\ndados\n```\n\nPara salvar o conjunto de dados **Orange** em uma planilha Excel (.xlsx) no R, você pode utilizar o pacote **writexl**, que permite exportar data frames para arquivos Excel de forma prática e rápida.\n\n```{r}\nlibrary(writexl)\n\nwrite_xlsx(Orange, path = \"Orange.xlsx\")\n```\n\n## Dados em Formato Excel\n\nO pacote **readxl** é utilizado para importar planilhas do Excel para o R, convertendo-as em data frames que podem ser manipulados facilmente. Para usar suas funções, é necessário carregar o pacote antes.\n\nA função principal para essa tarefa é a **read_excel**, que lê o conteúdo da planilha.\n\nO primeiro argumento dessa função é o caminho do arquivo Excel que será importado. Esse caminho, incluindo o nome do arquivo e a extensão `.xlsx`, deve ser informado entre aspas duplas para que o R o reconheça corretamente.\n\n```{r}\nlibrary(dplyr)\nlibrary(tidyverse)\nlibrary(readxl)\ndados2 <- read_excel(\"dados.xlsx\",\n          sheet = \"sensibilidade_fungicidas\")\n\n#O argumento sheet = \"sensibilidade_fungicidas\" indica que você está lendo especificamente a aba (planilha) com esse nome dentro do arquivo Excel.\n\n#Ou dessa forma:\n\n#Pelo nome da aba → \"nome_da_aba\".\ndados2<- read_excel(\"dados.xlsx\", \"sensibilidade_fungicidas\")\n#Pela posição da aba → 1, 2, 3, etc.\ndados2 <- read_excel(\"dados.xlsx\", 2)\n\n\ndados2 <- dados2 |>\n\nmutate(dose = as.numeric(dose)) #O código transforma a coluna dose do objeto dados2 em formato numérico e salva essa versão modificada de volta no próprio dados2.\n\n#Isso porque na tabela a coluna dose não está como número.\n\n```\n\n## Dados em Planilhas Google\n\nPara importar dados de planilhas do Google Sheets no R, utiliza-se a função **read_gsheet**, que faz parte do pacote **gsheet**. Essa função lê a planilha diretamente a partir da URL (link) da planilha desejada, facilitando a importação sem precisar baixar o arquivo.\n\n```{r}\nlibrary(gsheet)\n\nsurvey <- gsheet2tbl(\"https://docs.google.com/spreadsheets/d/1bq2N19DcZdtax2fQW9OHSGMR0X2__Z9T/edit?gid=1118819738#gid=1118819738\")\n```\n\n## Usando o Argumento `text`\n\nUma maneira rápida de carregar dados no R é utilizando o argumento **text**. Basta copiar os dados diretamente de uma planilha (Ctrl + C) e colar dentro das aspas (`\"\"`) após o argumento `text` na função `read.table`. Isso permite importar pequenos conjuntos de dados sem precisar salvar arquivos externos.\n\nPor exemplo:\\\n`dados <- read.table(h = TRUE, text = \" \")`\n\n### Salvando Dados do R para Arquivos Excel ou CSV\n\nPara exportar dados do R, você pode salvar data frames em arquivos Excel ou CSV usando pacotes específicos, como `writexl` para Excel e funções base do R para CSV.\n\n```{r}\nlibrary(writexl)\n# write_xlsx() #Excel\n# write_csv() #Csv\n```\n\n## Verificando o Conjunto de Dados\n\nPara confirmar se os dados foram importados corretamente, podemos usar as funções **str()** e **glimpse()**.\n\n-    A função **str()** apresenta um resumo rápido da estrutura do objeto, mostrando o tipo, tamanho e os componentes, sendo útil para uma primeira exploração de data frames, listas ou vetores.\n\n-    A função **glimpse()**, do pacote **dplyr**, oferece uma visão compacta e organizada do conjunto de dados, exibindo o número de linhas e colunas, o tipo de cada variável (como numérico ou caractere) e os primeiros valores de cada coluna.\n\nAmbas ajudam a entender rapidamente o formato e o conteúdo dos dados carregados.\n\n```{r}\nstr(dados2) \nglimpse (dados2)\n```\n\n### Resumo Estatístico Detalhado com a Função `skim()`\n\nA função **skim()**, do pacote **skimr**, oferece um resumo estatístico mais completo dos dados. Ela apresenta informações como média, mediana, valores mínimos e máximos, além do número de valores ausentes (NA) em cada variável. Essa função é muito útil para uma análise exploratória inicial mais aprofundada.\n\n```{r}\nlibrary(skimr) #warning:false #message:false\nskim(dados2)\n```\n\n### Visualizando os Nomes das Colunas\n\nA função **names()** é utilizada para listar os nomes das colunas de um data frame. Isso ajuda a identificar claramente quais variáveis estão disponíveis para análise no conjunto de dados.\n\n```{r}\nnames(dados2)\n```\n\n## Trabalhando com Dados Importados\n\nApós importar os dados, é comum realizar algumas operações básicas para explorá-los e manipulá-los. A seguir, veja alguns exemplos simples que ilustram como começar a trabalhar com o seu conjunto de dados.\n\n```{r}\nlibrary(gsheet)\nsurvey <- gsheet2tbl(\"https://docs.google.com/spreadsheets/d/1bq2N19DcZdtax2fQW9OHSGMR0X2__Z9T/edit?gid=1118819738#gid=1118819738\")\n\nsurvey |>\n  group_by(state,residue) |>   # agrupar dentro dessa planilha\n  count()\n\nRS <- survey |>  # Para criar uma planilha de um subconjunto\n  filter(state == 'RS') # Filter é para selecionar linhas\nPR <- survey |>\n  filter(state == 'PR')\n\n\ncombinado <- rbind(RS,PR) # Combinar os dois conjuntos, um embaixo do outro\n\n```\n\n```{r}\nsurvey_b <- survey |>\n dplyr::select(year, state, species) # Para selecionar colunas de um arquivo. Usar os dois pontos para chamar o pacote dplyr sem carrega-lo.\n\nsurvey_b |>\n  group_by(year,species) |> \n  count() |>\n  ggplot(aes(year, n, fill = species))+ # fill é o preenchimento\n  geom_col()+\n  scale_fill_manual(values = c(\"red\", \"blue\")) #fazer escolha de cor manual\nggsave(\"espécies.png\") #para salvar a imagem\n\nsurvey_b |>\n  group_by(year,species) |> \n  count() |>\n  ggplot(aes(year, n, fill = species))+ #fill é o preenchimento, se colocar color depois do fill vai adicionar cor no controno das barras dos gráficos\n  geom_col()+\n  scale_fill_viridis_d()\n```\n\n![](espécies.png)\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":true,"warning":false,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"engine":"knitr"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":true,"code-overflow":"scroll","code-link":false,"code-line-numbers":true,"code-tools":true,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","css":["styles.css"],"toc":true,"output-file":"importando_dados.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","appendix-view-license":"View License","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words","listing-page-filter":"Filter","draft":"Draft"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.5.57","author":"Igo Sarmento da Silva","editor":"visual","theme":{"light":"minty","dark":"darkly"},"message":false,"title":"importando_dados"},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}