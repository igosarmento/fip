{"title":"graficos","markdown":{"yaml":{"title":"graficos"},"headingText":"**Visualização de dados**","containsRefs":false,"markdown":"\n\n\n## Visualização de Dados com ggplot2\n\nO pacote **ggplot2** é amplamente utilizado para criar gráficos no R. Ele pode ser carregado sozinho, com `library(ggplot2)`, ou como parte do conjunto **tidyverse**.\n\nA construção dos gráficos no **ggplot2** é feita por camadas, que vão sendo adicionadas progressivamente. Por isso, utiliza-se o símbolo **+**, que representa a adição de uma nova camada ao gráfico.\n\nA estrutura básica inicia-se com a função **ggplot()**, onde se define a estética dos dados — ou seja, quais variáveis serão usadas nos eixos, cores, tamanhos, etc. Depois, adicionam-se camadas com funções do tipo **geom\\_()**, que determinam o tipo do gráfico, como:\n\n-    `geom_point()` para gráficos de pontos,\n\n-    `geom_line()` para gráficos de linha,\n\n-    `geom_bar()` para gráficos de barras, entre outros.\n\n### Uso do Pipe (\\|\\>)\n\nO pipe (`|>`) é utilizado para encadear comandos de forma mais legível e organizada. Ele permite aplicar uma sequência de operações sem precisar repetir o nome do objeto várias vezes. Deve ser precedido por um espaço e, geralmente, seguido por uma nova linha para melhor clareza.\n\n### Exemplo Básico de Gráfico com ggplot2\n\nAntes de criar um gráfico, é comum importar os dados para o R. Depois, pode-se usar o pipe para passar o conjunto de dados para a função `ggplot()` e construir o gráfico adicionando camadas conforme necessário.\n\n```{r}\nlibrary(gsheet)\n\n# usou conjunto de dados do Magnésio, planilha online. Usou o gsheet para chamar os dados do link.\ndat_mg <- gsheet2tbl(\"https://docs.google.com/spreadsheets/d/1bq2N19DcZdtax2fQW9OHSGMR0X2__Z9T/edit?gid=983033137#gid=983033137\")\n```\n\n### Construindo um Gráfico com ggplot2\n\nA criação de um gráfico no **ggplot2** começa pela função **ggplot()**, onde se define o conjunto de dados que será utilizado — geralmente um data frame, como por exemplo, um objeto chamado *magnésio*.\n\nDentro da função **ggplot()**, usamos a função **aes()** (estética) para mapear as variáveis aos eixos do gráfico, indicando qual variável vai para o eixo x e qual vai para o eixo y. Além disso, podemos definir características visuais, como cor, tamanho e forma dos pontos.\n\nPara colorir elementos do gráfico, utiliza-se o argumento `color`, que pode receber o nome de uma cor ou um código hexadecimal. Quando o argumento `color` é colocado dentro de **aes()**, isso indica que a cor será atribuída de forma dinâmica, de acordo com os valores de uma variável do conjunto de dados.\n\n### Exemplo: Gráfico de Pontos (Dispersão)\n\nA função **geom_point()** especifica que o gráfico será de pontos, ideal para visualizar a relação entre duas variáveis em um gráfico de dispersão.\n\nAlém disso, é possível ajustar a transparência dos pontos usando o argumento **alpha**, que varia de 0 (totalmente transparente) a 1 (totalmente opaco), facilitando a visualização em gráficos com muitos pontos sobrepostos.\n\n```{r}\nlibrary(ggplot2)\n\ndat_mg |> \n  ggplot (aes(trat, comp, color = trat))+\n  geom_point(alpha = 1)\n```\n\n### Usando a Função `shape` no ggplot2\n\nA função **shape** permite modificar a forma dos pontos em um gráfico, atribuindo diferentes símbolos (como círculos, triângulos, quadrados, etc.) para distinguir categorias ou variáveis. Isso ajuda a visualizar melhor as diferenças entre grupos no gráfico.\n\n```{r}\ndat_mg |>\n  ggplot(aes(trat, comp, shape = trat, color = trat))+\n  geom_point(alpha = 1)\n```\n\n### Gráficos de Pontos com `geom_jitter`\n\nEm gráficos com muitos dados agrupados, é comum que os pontos se sobreponham, dificultando a visualização individual de cada observação. Para solucionar isso, o **ggplot2** oferece a função **geom_jitter()**.\n\nEssa função adiciona um pequeno deslocamento aleatório aos pontos, espalhando-os ligeiramente para evitar sobreposição. O deslocamento pode ser controlado pelo argumento **width**, que ajusta a largura da dispersão horizontal, garantindo que os pontos fiquem próximos dos valores originais, mas visíveis separadamente.\n\n```{r}\ndat_mg |>\n  ggplot(aes(trat, comp, shape = trat, color = trat))+\n  geom_point(alpha = 1)+\n  geom_jitter(width = 0.2)\n```\n\n### Gráfico de Barras com ggplot2 e dplyr\n\nNeste exemplo, usamos os pacotes **ggplot2** e **dplyr** para criar um gráfico de barras que mostra a média da variável **comp** para cada grupo da variável **trat** no conjunto de dados **dat_mg**.\n\nPrimeiro, os dados são agrupados pela variável **trat** com a função **group_by()** e, em seguida, calcula-se a média de **comp** usando **summarise()**, ignorando valores ausentes (`NA`) com o argumento `na.rm = TRUE`.\n\nCom os dados resumidos, construímos o gráfico com a função **ggplot()**. A camada **geom_bar()**, configurada com `stat = \"identity\"`, indica que os valores do eixo y já foram calculados previamente e não precisam ser contados ou somados automaticamente.\n\nO preenchimento das barras é feito com `fill = trat`, e as bordas são destacadas com cor preta.\n\nOs rótulos dos eixos são ajustados com **labs()**, e o tema **theme_minimal()** é aplicado para um visual mais limpo e moderno.\n\nEsse gráfico é ideal para comparar médias entre diferentes grupos ou tratamentos, facilitando a interpretação visual dos resultados.\n\n```{r}\nlibrary(ggplot2)\nlibrary(dplyr)\n\n# Calcular média por tratamento\nmedia_mg <- dat_mg |>\n  group_by(trat) |>\n  summarise(media_comp = mean(comp, na.rm = TRUE))\n\n# Gráfico de barras\nggplot(media_mg, aes(x = trat, y = media_comp, fill = trat)) +\n  geom_bar(stat = \"identity\", color = \"black\", width = 0.6) +\n  labs(x = \"Tratamento\", y = \"Média de Comprimento\") +\n  theme_minimal()\n\n```\n\n### Gráfico de Linhas\n\nNeste exemplo, é criado um gráfico combinando **linhas e pontos** com base no conjunto de dados **media_mg**, que contém as médias por tratamento previamente calculadas.\n\nO gráfico de linhas é útil para visualizar tendências ou variações entre os tratamentos. As linhas conectam os pontos representando as médias, facilitando a interpretação da progressão ou comparação entre os grupos.\n\n```{r}\nmedia_mg$trat <- factor(media_mg$trat, levels = unique(media_mg$trat))\n\n# Criar gráfico de linhas com pontos\nggplot(media_mg, aes(x = trat, y = media_comp, group = 1)) +\n  geom_line(color = \"steelblue\", size = 1.2) +\n  geom_point(size = 3, shape = 21, fill = \"white\", color = \"steelblue\") +\n  labs(x = \"Tratamento\", y = \"Comprimento Médio\") +\n  theme_minimal()\n\n\n```\n\n### Personalizando o Gráfico com `labs()`\n\nA função **labs()** permite adicionar elementos descritivos ao gráfico, como **título, subtítulo, nomes dos eixos, legenda** e **fonte dos dados**. Esses recursos tornam o gráfico mais informativo e facilitam sua interpretação, especialmente em contextos como relatórios, artigos científicos e apresentações.\n\nO uso adequado do `labs()` enriquece a comunicação visual dos resultados, fornecendo contexto e clareza para quem analisa o gráfico.\n\n```{r}\n# Gráfico de barras com informações adicionais\nggplot(media_mg, aes(x = trat, y = media_comp, fill = trat)) +\n  geom_bar(stat = \"identity\", color = \"black\", width = 0.6) +\n  labs(\n    title = \"Média de Comprimento por Tratamento\",\n    subtitle = \"Visualização comparativa das médias da variável 'comp'\",\n    x = \"Tratamento\",\n    y = \"Média de Comprimento\",\n    caption = \"Fonte: Dados experimentais - dat_mg\"\n  ) +\n  theme_minimal()\n```\n\n### Gráfico de Boxplot\n\nO **boxplot** é um tipo de gráfico muito utilizado para analisar a **distribuição de uma variável numérica**, especialmente quando se deseja comparar essa distribuição entre diferentes grupos, como tratamentos experimentais.\n\nEsse gráfico resume visualmente informações estatísticas importantes, como:\n\n-    **Mediana** (linha central da caixa);\n\n-    **Quartis** (limites inferior e superior da caixa);\n\n-    **Extremos** (valores mínimos e máximos dentro de um intervalo aceitável);\n\n-    **Outliers** (valores discrepantes), representados por pontos fora dos limites do boxplot.\n\nNo R, utilizamos a função **geom_boxplot()**, do pacote **ggplot2**, para gerar esse tipo de visualização.\n\nA estrutura básica do gráfico exige uma variável **categórica no eixo x** (por exemplo, `trat`) e uma **variável numérica no eixo y** (como `comp`).\n\nEsse tipo de gráfico é ideal para identificar assimetrias, dispersão e possíveis valores atípicos nos dados.\n\n```{r}\nlibrary(ggplot2)\n\n# Criar boxplot da variável 'comp' por tratamento\nggplot(dat_mg, aes(x = trat, y = comp, fill = trat)) +\n  geom_boxplot(outlier.color = \"red\", outlier.shape = 21, outlier.fill = \"white\") +\n  labs(\n    title = \"Distribuição da Variável 'comp' por Tratamento\",\n    subtitle = \"Boxplot representando a dispersão e tendência dos dados por grupo\",\n    x = \"Tratamento\",\n    y = \"Comprimento\",\n    caption = \"Fonte: Dados experimentais - dat_mg\"\n  ) +\n  theme_minimal()\n```\n\n### Composição de Gráficos com o Pacote **patchwork**\n\nO pacote **patchwork** permite combinar múltiplos gráficos feitos com o **ggplot2** em uma única visualização, facilitando comparações e apresentando informações de forma integrada.\n\nApós instalar e carregar o pacote, cada gráfico deve ser criado separadamente e atribuído a um **objeto com nome representativo**. Para isso, utiliza-se o operador **pipe (%\\>%)** (ou o novo `|>`, se preferir), que permite dar sequência à construção do gráfico de forma clara e organizada.\n\nDepois de criados, os gráficos podem ser combinados com o operador **+** (para empilhar na vertical) ou **\\|** (para posicionar lado a lado), de acordo com a disposição desejada.\n\nEssa ferramenta é especialmente útil em relatórios, painéis comparativos e apresentações visuais mais completas.\n\n```{r}\nlibrary(ggplot2)\nlibrary(patchwork)\n\n#Simulando um conjunto de dados \nset.seed(123)\n\n\n# Simulando os dados\ndados_fitopatologia <- data.frame(\n  irrigacao = rep(c(\"Gotejamento\", \"Aspersão\", \"Sulco\"), each = 30),\n  umidade = rep(c(\"Alta\", \"Moderada\"), times = 45),\n  severidade = c(\n    rnorm(30, mean = 0.6, sd = 0.1),  # Gotejamento\n    rnorm(30, mean = 0.8, sd = 0.15), # Aspersão\n    rnorm(30, mean = 0.4, sd = 0.1)   # Sulco\n  )\n)\n\n# Gráfico 1: Boxplot\ngrafico1 <- dados_fitopatologia |>\n  ggplot(aes(x = irrigacao, y = severidade, fill = irrigacao)) +\n  geom_boxplot() +\n  labs(\n    title = \"Severidade por tipo de irrigação\",\n    x = \"Irrigação\",\n    y = \"Severidade\"\n  ) +\n  theme_minimal(base_size = 14) +\n  theme(\n    plot.title = element_text(size = 16, face = \"bold\", margin = margin(b = 10)),\n    axis.title.x = element_text(margin = margin(t = 10)),\n    axis.title.y = element_text(margin = margin(r = 10)),\n    plot.margin = margin(t = 15, r = 15, b = 15, l = 15)\n  )\n\n# Gráfico 2: Jitter por umidade\ngrafico2 <- dados_fitopatologia |>\n  ggplot(aes(x = irrigacao, y = severidade, color = umidade)) +\n  geom_jitter(width = 0.2, size = 2) +\n  labs(\n    title = \"Severidade por irrigação e umidade\",\n    x = \"Irrigação\",\n    y = \"Severidade\"\n  ) +\n  theme_minimal(base_size = 14) +\n  theme(\n    plot.title = element_text(size = 16, face = \"bold\", margin = margin(b = 10)),\n    axis.title.x = element_text(margin = margin(t = 10)),\n    axis.title.y = element_text(margin = margin(r = 10)),\n    plot.margin = margin(t = 15, r = 15, b = 15, l = 15)\n  )\n\n# Composição com patchwork\n(grafico1 | grafico2) + \n  plot_annotation(\n    title = \"Análise Fitopatológica: Severidade do Oídio em Tomate\",\n    theme = theme(\n      plot.title = element_text(size = 18, face = \"bold\", hjust = 0.5, margin = margin(b = 15))\n    )\n  )\n\n\n\n```\n\n### Gráficos com `facet_wrap()`\n\nA função **facet_wrap()**, do pacote **ggplot2**, permite dividir um gráfico em **vários painéis** com base nos níveis de uma variável categórica. Cada painel mostra uma parte do conjunto de dados, facilitando a **comparação entre subgrupos**.\n\nEssa abordagem é útil quando se deseja visualizar o comportamento de uma variável numérica em diferentes categorias, como tratamentos, regiões ou tempos.\n\n```{r}\n# Simulando os dados\n\nset.seed(123)\ndados_fitopatologia <- data.frame(\n  irrigacao = rep(c(\"Gotejamento\", \"Aspersão\", \"Sulco\"), each = 30),\n  umidade = rep(c(\"Alta\", \"Moderada\"), times = 45),\n  severidade = c(\n    rnorm(30, mean = 0.6, sd = 0.1),\n    rnorm(30, mean = 0.8, sd = 0.15),\n    rnorm(30, mean = 0.4, sd = 0.1)\n  )\n)\n\n# Gráfico com facet_wrap por nível de umidade\ngrafico_facetado <- ggplot(dados_fitopatologia, aes(x = irrigacao, y = severidade, fill = irrigacao)) +\n  geom_boxplot() +\n  facet_wrap(~ umidade) +  # Dividindo os gráficos por nível de umidade\n  labs(\n    title = \"Severidade da doença por tipo de irrigação e umidade\",\n    x = \"Tipo de Irrigação\",\n    y = \"Severidade\"\n  ) +\n  theme_minimal(base_size = 14) +\n  theme(\n    plot.title = element_text(size = 16, face = \"bold\", hjust = 0.5, margin = margin(b = 12)),\n    strip.text = element_text(size = 14, face = \"bold\"),  # Título de cada painel (Alta / Moderada)\n    axis.title.x = element_text(margin = margin(t = 10)),\n    axis.title.y = element_text(margin = margin(r = 10))\n  )\n\n# Mostrar o gráfico\ngrafico_facetado\n```\n","srcMarkdownNoYaml":"\n\n# **Visualização de dados**\n\n## Visualização de Dados com ggplot2\n\nO pacote **ggplot2** é amplamente utilizado para criar gráficos no R. Ele pode ser carregado sozinho, com `library(ggplot2)`, ou como parte do conjunto **tidyverse**.\n\nA construção dos gráficos no **ggplot2** é feita por camadas, que vão sendo adicionadas progressivamente. Por isso, utiliza-se o símbolo **+**, que representa a adição de uma nova camada ao gráfico.\n\nA estrutura básica inicia-se com a função **ggplot()**, onde se define a estética dos dados — ou seja, quais variáveis serão usadas nos eixos, cores, tamanhos, etc. Depois, adicionam-se camadas com funções do tipo **geom\\_()**, que determinam o tipo do gráfico, como:\n\n-    `geom_point()` para gráficos de pontos,\n\n-    `geom_line()` para gráficos de linha,\n\n-    `geom_bar()` para gráficos de barras, entre outros.\n\n### Uso do Pipe (\\|\\>)\n\nO pipe (`|>`) é utilizado para encadear comandos de forma mais legível e organizada. Ele permite aplicar uma sequência de operações sem precisar repetir o nome do objeto várias vezes. Deve ser precedido por um espaço e, geralmente, seguido por uma nova linha para melhor clareza.\n\n### Exemplo Básico de Gráfico com ggplot2\n\nAntes de criar um gráfico, é comum importar os dados para o R. Depois, pode-se usar o pipe para passar o conjunto de dados para a função `ggplot()` e construir o gráfico adicionando camadas conforme necessário.\n\n```{r}\nlibrary(gsheet)\n\n# usou conjunto de dados do Magnésio, planilha online. Usou o gsheet para chamar os dados do link.\ndat_mg <- gsheet2tbl(\"https://docs.google.com/spreadsheets/d/1bq2N19DcZdtax2fQW9OHSGMR0X2__Z9T/edit?gid=983033137#gid=983033137\")\n```\n\n### Construindo um Gráfico com ggplot2\n\nA criação de um gráfico no **ggplot2** começa pela função **ggplot()**, onde se define o conjunto de dados que será utilizado — geralmente um data frame, como por exemplo, um objeto chamado *magnésio*.\n\nDentro da função **ggplot()**, usamos a função **aes()** (estética) para mapear as variáveis aos eixos do gráfico, indicando qual variável vai para o eixo x e qual vai para o eixo y. Além disso, podemos definir características visuais, como cor, tamanho e forma dos pontos.\n\nPara colorir elementos do gráfico, utiliza-se o argumento `color`, que pode receber o nome de uma cor ou um código hexadecimal. Quando o argumento `color` é colocado dentro de **aes()**, isso indica que a cor será atribuída de forma dinâmica, de acordo com os valores de uma variável do conjunto de dados.\n\n### Exemplo: Gráfico de Pontos (Dispersão)\n\nA função **geom_point()** especifica que o gráfico será de pontos, ideal para visualizar a relação entre duas variáveis em um gráfico de dispersão.\n\nAlém disso, é possível ajustar a transparência dos pontos usando o argumento **alpha**, que varia de 0 (totalmente transparente) a 1 (totalmente opaco), facilitando a visualização em gráficos com muitos pontos sobrepostos.\n\n```{r}\nlibrary(ggplot2)\n\ndat_mg |> \n  ggplot (aes(trat, comp, color = trat))+\n  geom_point(alpha = 1)\n```\n\n### Usando a Função `shape` no ggplot2\n\nA função **shape** permite modificar a forma dos pontos em um gráfico, atribuindo diferentes símbolos (como círculos, triângulos, quadrados, etc.) para distinguir categorias ou variáveis. Isso ajuda a visualizar melhor as diferenças entre grupos no gráfico.\n\n```{r}\ndat_mg |>\n  ggplot(aes(trat, comp, shape = trat, color = trat))+\n  geom_point(alpha = 1)\n```\n\n### Gráficos de Pontos com `geom_jitter`\n\nEm gráficos com muitos dados agrupados, é comum que os pontos se sobreponham, dificultando a visualização individual de cada observação. Para solucionar isso, o **ggplot2** oferece a função **geom_jitter()**.\n\nEssa função adiciona um pequeno deslocamento aleatório aos pontos, espalhando-os ligeiramente para evitar sobreposição. O deslocamento pode ser controlado pelo argumento **width**, que ajusta a largura da dispersão horizontal, garantindo que os pontos fiquem próximos dos valores originais, mas visíveis separadamente.\n\n```{r}\ndat_mg |>\n  ggplot(aes(trat, comp, shape = trat, color = trat))+\n  geom_point(alpha = 1)+\n  geom_jitter(width = 0.2)\n```\n\n### Gráfico de Barras com ggplot2 e dplyr\n\nNeste exemplo, usamos os pacotes **ggplot2** e **dplyr** para criar um gráfico de barras que mostra a média da variável **comp** para cada grupo da variável **trat** no conjunto de dados **dat_mg**.\n\nPrimeiro, os dados são agrupados pela variável **trat** com a função **group_by()** e, em seguida, calcula-se a média de **comp** usando **summarise()**, ignorando valores ausentes (`NA`) com o argumento `na.rm = TRUE`.\n\nCom os dados resumidos, construímos o gráfico com a função **ggplot()**. A camada **geom_bar()**, configurada com `stat = \"identity\"`, indica que os valores do eixo y já foram calculados previamente e não precisam ser contados ou somados automaticamente.\n\nO preenchimento das barras é feito com `fill = trat`, e as bordas são destacadas com cor preta.\n\nOs rótulos dos eixos são ajustados com **labs()**, e o tema **theme_minimal()** é aplicado para um visual mais limpo e moderno.\n\nEsse gráfico é ideal para comparar médias entre diferentes grupos ou tratamentos, facilitando a interpretação visual dos resultados.\n\n```{r}\nlibrary(ggplot2)\nlibrary(dplyr)\n\n# Calcular média por tratamento\nmedia_mg <- dat_mg |>\n  group_by(trat) |>\n  summarise(media_comp = mean(comp, na.rm = TRUE))\n\n# Gráfico de barras\nggplot(media_mg, aes(x = trat, y = media_comp, fill = trat)) +\n  geom_bar(stat = \"identity\", color = \"black\", width = 0.6) +\n  labs(x = \"Tratamento\", y = \"Média de Comprimento\") +\n  theme_minimal()\n\n```\n\n### Gráfico de Linhas\n\nNeste exemplo, é criado um gráfico combinando **linhas e pontos** com base no conjunto de dados **media_mg**, que contém as médias por tratamento previamente calculadas.\n\nO gráfico de linhas é útil para visualizar tendências ou variações entre os tratamentos. As linhas conectam os pontos representando as médias, facilitando a interpretação da progressão ou comparação entre os grupos.\n\n```{r}\nmedia_mg$trat <- factor(media_mg$trat, levels = unique(media_mg$trat))\n\n# Criar gráfico de linhas com pontos\nggplot(media_mg, aes(x = trat, y = media_comp, group = 1)) +\n  geom_line(color = \"steelblue\", size = 1.2) +\n  geom_point(size = 3, shape = 21, fill = \"white\", color = \"steelblue\") +\n  labs(x = \"Tratamento\", y = \"Comprimento Médio\") +\n  theme_minimal()\n\n\n```\n\n### Personalizando o Gráfico com `labs()`\n\nA função **labs()** permite adicionar elementos descritivos ao gráfico, como **título, subtítulo, nomes dos eixos, legenda** e **fonte dos dados**. Esses recursos tornam o gráfico mais informativo e facilitam sua interpretação, especialmente em contextos como relatórios, artigos científicos e apresentações.\n\nO uso adequado do `labs()` enriquece a comunicação visual dos resultados, fornecendo contexto e clareza para quem analisa o gráfico.\n\n```{r}\n# Gráfico de barras com informações adicionais\nggplot(media_mg, aes(x = trat, y = media_comp, fill = trat)) +\n  geom_bar(stat = \"identity\", color = \"black\", width = 0.6) +\n  labs(\n    title = \"Média de Comprimento por Tratamento\",\n    subtitle = \"Visualização comparativa das médias da variável 'comp'\",\n    x = \"Tratamento\",\n    y = \"Média de Comprimento\",\n    caption = \"Fonte: Dados experimentais - dat_mg\"\n  ) +\n  theme_minimal()\n```\n\n### Gráfico de Boxplot\n\nO **boxplot** é um tipo de gráfico muito utilizado para analisar a **distribuição de uma variável numérica**, especialmente quando se deseja comparar essa distribuição entre diferentes grupos, como tratamentos experimentais.\n\nEsse gráfico resume visualmente informações estatísticas importantes, como:\n\n-    **Mediana** (linha central da caixa);\n\n-    **Quartis** (limites inferior e superior da caixa);\n\n-    **Extremos** (valores mínimos e máximos dentro de um intervalo aceitável);\n\n-    **Outliers** (valores discrepantes), representados por pontos fora dos limites do boxplot.\n\nNo R, utilizamos a função **geom_boxplot()**, do pacote **ggplot2**, para gerar esse tipo de visualização.\n\nA estrutura básica do gráfico exige uma variável **categórica no eixo x** (por exemplo, `trat`) e uma **variável numérica no eixo y** (como `comp`).\n\nEsse tipo de gráfico é ideal para identificar assimetrias, dispersão e possíveis valores atípicos nos dados.\n\n```{r}\nlibrary(ggplot2)\n\n# Criar boxplot da variável 'comp' por tratamento\nggplot(dat_mg, aes(x = trat, y = comp, fill = trat)) +\n  geom_boxplot(outlier.color = \"red\", outlier.shape = 21, outlier.fill = \"white\") +\n  labs(\n    title = \"Distribuição da Variável 'comp' por Tratamento\",\n    subtitle = \"Boxplot representando a dispersão e tendência dos dados por grupo\",\n    x = \"Tratamento\",\n    y = \"Comprimento\",\n    caption = \"Fonte: Dados experimentais - dat_mg\"\n  ) +\n  theme_minimal()\n```\n\n### Composição de Gráficos com o Pacote **patchwork**\n\nO pacote **patchwork** permite combinar múltiplos gráficos feitos com o **ggplot2** em uma única visualização, facilitando comparações e apresentando informações de forma integrada.\n\nApós instalar e carregar o pacote, cada gráfico deve ser criado separadamente e atribuído a um **objeto com nome representativo**. Para isso, utiliza-se o operador **pipe (%\\>%)** (ou o novo `|>`, se preferir), que permite dar sequência à construção do gráfico de forma clara e organizada.\n\nDepois de criados, os gráficos podem ser combinados com o operador **+** (para empilhar na vertical) ou **\\|** (para posicionar lado a lado), de acordo com a disposição desejada.\n\nEssa ferramenta é especialmente útil em relatórios, painéis comparativos e apresentações visuais mais completas.\n\n```{r}\nlibrary(ggplot2)\nlibrary(patchwork)\n\n#Simulando um conjunto de dados \nset.seed(123)\n\n\n# Simulando os dados\ndados_fitopatologia <- data.frame(\n  irrigacao = rep(c(\"Gotejamento\", \"Aspersão\", \"Sulco\"), each = 30),\n  umidade = rep(c(\"Alta\", \"Moderada\"), times = 45),\n  severidade = c(\n    rnorm(30, mean = 0.6, sd = 0.1),  # Gotejamento\n    rnorm(30, mean = 0.8, sd = 0.15), # Aspersão\n    rnorm(30, mean = 0.4, sd = 0.1)   # Sulco\n  )\n)\n\n# Gráfico 1: Boxplot\ngrafico1 <- dados_fitopatologia |>\n  ggplot(aes(x = irrigacao, y = severidade, fill = irrigacao)) +\n  geom_boxplot() +\n  labs(\n    title = \"Severidade por tipo de irrigação\",\n    x = \"Irrigação\",\n    y = \"Severidade\"\n  ) +\n  theme_minimal(base_size = 14) +\n  theme(\n    plot.title = element_text(size = 16, face = \"bold\", margin = margin(b = 10)),\n    axis.title.x = element_text(margin = margin(t = 10)),\n    axis.title.y = element_text(margin = margin(r = 10)),\n    plot.margin = margin(t = 15, r = 15, b = 15, l = 15)\n  )\n\n# Gráfico 2: Jitter por umidade\ngrafico2 <- dados_fitopatologia |>\n  ggplot(aes(x = irrigacao, y = severidade, color = umidade)) +\n  geom_jitter(width = 0.2, size = 2) +\n  labs(\n    title = \"Severidade por irrigação e umidade\",\n    x = \"Irrigação\",\n    y = \"Severidade\"\n  ) +\n  theme_minimal(base_size = 14) +\n  theme(\n    plot.title = element_text(size = 16, face = \"bold\", margin = margin(b = 10)),\n    axis.title.x = element_text(margin = margin(t = 10)),\n    axis.title.y = element_text(margin = margin(r = 10)),\n    plot.margin = margin(t = 15, r = 15, b = 15, l = 15)\n  )\n\n# Composição com patchwork\n(grafico1 | grafico2) + \n  plot_annotation(\n    title = \"Análise Fitopatológica: Severidade do Oídio em Tomate\",\n    theme = theme(\n      plot.title = element_text(size = 18, face = \"bold\", hjust = 0.5, margin = margin(b = 15))\n    )\n  )\n\n\n\n```\n\n### Gráficos com `facet_wrap()`\n\nA função **facet_wrap()**, do pacote **ggplot2**, permite dividir um gráfico em **vários painéis** com base nos níveis de uma variável categórica. Cada painel mostra uma parte do conjunto de dados, facilitando a **comparação entre subgrupos**.\n\nEssa abordagem é útil quando se deseja visualizar o comportamento de uma variável numérica em diferentes categorias, como tratamentos, regiões ou tempos.\n\n```{r}\n# Simulando os dados\n\nset.seed(123)\ndados_fitopatologia <- data.frame(\n  irrigacao = rep(c(\"Gotejamento\", \"Aspersão\", \"Sulco\"), each = 30),\n  umidade = rep(c(\"Alta\", \"Moderada\"), times = 45),\n  severidade = c(\n    rnorm(30, mean = 0.6, sd = 0.1),\n    rnorm(30, mean = 0.8, sd = 0.15),\n    rnorm(30, mean = 0.4, sd = 0.1)\n  )\n)\n\n# Gráfico com facet_wrap por nível de umidade\ngrafico_facetado <- ggplot(dados_fitopatologia, aes(x = irrigacao, y = severidade, fill = irrigacao)) +\n  geom_boxplot() +\n  facet_wrap(~ umidade) +  # Dividindo os gráficos por nível de umidade\n  labs(\n    title = \"Severidade da doença por tipo de irrigação e umidade\",\n    x = \"Tipo de Irrigação\",\n    y = \"Severidade\"\n  ) +\n  theme_minimal(base_size = 14) +\n  theme(\n    plot.title = element_text(size = 16, face = \"bold\", hjust = 0.5, margin = margin(b = 12)),\n    strip.text = element_text(size = 14, face = \"bold\"),  # Título de cada painel (Alta / Moderada)\n    axis.title.x = element_text(margin = margin(t = 10)),\n    axis.title.y = element_text(margin = margin(r = 10))\n  )\n\n# Mostrar o gráfico\ngrafico_facetado\n```\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":true,"warning":false,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"engine":"knitr"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":true,"code-overflow":"scroll","code-link":false,"code-line-numbers":true,"code-tools":true,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","css":["styles.css"],"toc":true,"output-file":"visualizando_dados.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","appendix-view-license":"View License","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words","listing-page-filter":"Filter","draft":"Draft"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.5.57","author":"Igo Sarmento da Silva","editor":"visual","theme":{"light":"minty","dark":"darkly"},"message":false,"title":"graficos"},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}