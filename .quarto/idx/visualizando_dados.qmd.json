{"title":"graficos","markdown":{"yaml":{"title":"graficos"},"headingText":"**Visualização de dados**","containsRefs":false,"markdown":"\n\nformat: html editor: visual ---\n\n\n## **Gráficos em ggplot**\n\nO `ggplot2` é o pacote usado para visualização dos dados. Ele pode ser carregado de forma independente `(library(ggplot2))` ou como parte do conjunto de pacotes do tidyverse.\n\nA construção de gráficos com o `ggplot2` segue uma lógica baseada em camadas, que são adicionadas à medida que se confecciona o gráfico, por isso que se usa o sinal de +, porque significa a adição de mais uma camada. A estrutura básica começa com a função `ggplot()`, que define a estética da distribuição dos dados que serão trabalhados. Em seguida, adiciona-se uma ou mais camadas com funções do tipo `geom_()`, que especificam o tipo de gráfico desejado, como pontos (`geom_point()`), linhas (`geom_line()`), barras (`geom_bar()`), entre outros.\n\nUsa-se o pipe (\\|\\>) para enfatizar uma sequência de comandos ou ações no chunk e para evitar adicionar o nome do data frame dentro da função `ggplot()`. O pipe deve ter sempre um espaço antes dele e, geralmente, deve ser seguido por uma nova linha.\n\n![](ggplot2.webp)\n\n## Exemplo de gráficos no ggplot2\n\n### **Importação de dados**\n\n```{r warning(FALSE)}\nlibrary(gsheet)\n\n# usou conjunto de dados do Magnésio, planilha online. Usou o gsheet para chamar os dados do link.\ndat_mg <- gsheet2tbl(\"https://docs.google.com/spreadsheets/d/1bq2N19DcZdtax2fQW9OHSGMR0X2__Z9T/edit?gid=983033137#gid=983033137\")\n```\n\n### Construindo o gráfico\n\nA primeira função para criar um ggplot é a função ggplot, que define o conjunto de dados a ser utilizado (o data frame onde os dados foram armazenados, ex. magnésio).\n\nA função `ggplot()` define o plano com os eixos x e y. Usamos a função aestetic (aes), para descrever como as variáveis são mapeadas (eixos x e y). Para adionar cor usa-se a função color = nome da cor, ou código. Ao incluir esta função dentro da função aes, dizemos ao ggplot que os pontos devem ser mapeados esteticamente utilizando cores para cada variavel.\n\n## Exemplos:\n\n### Gráficos de pontos\n\nA função `geom_point` define que a forma geométrica a ser utilizada é baseada em pontos, gerando um gráfico de dispersão. A função `alpha` trabalha com a tansparência.\n\n```{r}\nlibrary(ggplot2)\n\ndat_mg |> \n  ggplot (aes(trat, comp, color = trat))+\n  geom_point(alpha = 1)\n```\n\nA função `shape` é utilizada para adicionar diferentes formas ou tipos de marcadores para diferenciar as variáveis (exemplo: círculo e triângulo).\n\n```{r}\ndat_mg |>\n  ggplot(aes(trat, comp, shape = trat, color = trat))+\n  geom_point(alpha = 1)\n```\n\n### Gráficos de pontos + geom_jitter\n\nFrequentemente, em gráficos com muitos dados agrupados, ocorre a sobreposição de pontos, dificultando a visualização individual de cada observação. Para resolver esse problema, pode-se utilizar a função `geom_jitter()` no `ggplot2`.\n\nEssa função desloca ligeiramente os pontos de forma aleatória, permitindo visualizá-los de forma mais clara e separada. Para evitar uma dispersão excessiva dos dados, é possível controlar esse deslocamento por meio do argumento `width`, que define a largura do espalhamento horizontal. Isso garante que os pontos permaneçam próximos ao seu valor original, mas sem se sobrepor.\n\n```{r}\ndat_mg |>\n  ggplot(aes(trat, comp, shape = trat, color = trat))+\n  geom_point(alpha = 1)+\n  geom_jitter(width = 0.2)\n```\n\n### G**ráfico de barras**\n\nNeste exemplo, utilizamos os pacotes `ggplot2` e `dplyr` para gerar um gráfico de barras que representa a média da variável `comp`para cada tratamento (`trat`) no conjunto de dados `dat_mg`. Base `dat_mg` com as colunas `trat` (tratamentos) e `comp` (comprimento).\n\nPrimeiro, os dados são agrupados pela variável `trat` com a função `group_by()`, e em seguida é calculada a média da variável `comp` usando `summarise()`. O argumento `na.rm = TRUE` garante que valores ausentes (NA) sejam ignorados no cálculo da média.\n\nCom os dados resumidos, utilizamos a função `ggplot()` para construir o gráfico. A função `geom_bar()` com o argumento `stat = \"identity\"` indica que os valores do eixo y já foram previamente calculados (não devem ser contados ou somados automaticamente). O preenchimento das barras é definido por `fill = trat` e as bordas recebem cor preta para destacar as divisões.\n\nOs rótulos dos eixos são definidos com `labs()`, e o tema `theme_minimal()` é aplicado para um visual mais limpo e moderno.\n\nEste tipo de gráfico é útil para comparar médias entre diferentes grupos, facilitando a interpretação visual de experimentos com tratamentos ou categorias distintas.\n\n```{r}\nlibrary(ggplot2)\nlibrary(dplyr)\n\n# Calcular média por tratamento\nmedia_mg <- dat_mg |>\n  group_by(trat) |>\n  summarise(media_comp = mean(comp, na.rm = TRUE))\n\n# Gráfico de barras\nggplot(media_mg, aes(x = trat, y = media_comp, fill = trat)) +\n  geom_bar(stat = \"identity\", color = \"black\", width = 0.6) +\n  labs(x = \"Tratamento\", y = \"Média de Comprimento\") +\n  theme_minimal()\n\n```\n\n### **Gráfico de linhas**:\n\nNeste trecho de código, é criado um gráfico de linhas e pontos utilizando os dados de média por tratamento (`media_mg`), previamente calculados.\n\n```{r}\nmedia_mg$trat <- factor(media_mg$trat, levels = unique(media_mg$trat))\n\n# Criar gráfico de linhas com pontos\nggplot(media_mg, aes(x = trat, y = media_comp, group = 1)) +\n  geom_line(color = \"steelblue\", size = 1.2) +\n  geom_point(size = 3, shape = 21, fill = \"white\", color = \"steelblue\") +\n  labs(x = \"Tratamento\", y = \"Comprimento Médio\") +\n  theme_minimal()\n\n\n```\n\nÉ possível adicionar **título**, **subtítulo**, **rótulos dos eixos**, **legenda explicativa** e **fonte dos dados** usando a função `labs()`. Esses elementos enriquecem o gráfico, tornando-o mais informativo e interpretável, especialmente em relatórios, artigos e apresentações.\n\n```{r}\n# Gráfico de barras com informações adicionais\nggplot(media_mg, aes(x = trat, y = media_comp, fill = trat)) +\n  geom_bar(stat = \"identity\", color = \"black\", width = 0.6) +\n  labs(\n    title = \"Média de Comprimento por Tratamento\",\n    subtitle = \"Visualização comparativa das médias da variável 'comp'\",\n    x = \"Tratamento\",\n    y = \"Média de Comprimento\",\n    caption = \"Fonte: Dados experimentais - dat_mg\"\n  ) +\n  theme_minimal()\n```\n\n### Gráfico de Boxplot\n\nOs boxplots são gráficos muito úteis para analisar a distribuição de uma variável numérica, especialmente quando queremos comparar essa distribuição entre diferentes grupos (por exemplo, tratamentos experimentais).\n\nEsse tipo de gráfico resume visualmente medidas estatísticas importantes, como:\n\n-   Mediana (linha central da caixa);\n\n-   Quartis (limites superior e inferior da caixa);\n\n-   Valores máximos e mínimos dentro dos limites definidos;\n\n-   *Outliers* (valores discrepantes), que aparecem como pontos fora das “linhas” do boxplot.\n\nNo R, utilizamos a função `geom_boxplot()` dentro do pacote `ggplot2` para criar esse tipo de visualização. O eixo `x` deve conter uma variável categórica (como `trat`), e o eixo `y` uma variável numérica (como `comp`).\n\n```{r}\nlibrary(ggplot2)\n\n# Criar boxplot da variável 'comp' por tratamento\nggplot(dat_mg, aes(x = trat, y = comp, fill = trat)) +\n  geom_boxplot(outlier.color = \"red\", outlier.shape = 21, outlier.fill = \"white\") +\n  labs(\n    title = \"Distribuição da Variável 'comp' por Tratamento\",\n    subtitle = \"Boxplot representando a dispersão e tendência dos dados por grupo\",\n    x = \"Tratamento\",\n    y = \"Comprimento\",\n    caption = \"Fonte: Dados experimentais - dat_mg\"\n  ) +\n  theme_minimal()\n```\n\n### **Composição de gráficos com o pacote `Patchwork`**\n\nO pacote patchwork permite combinar diferentes gráficos criados com o `ggplot2` em uma única visualização. Após instalar e carregar o pacote, é necessário atribuir um nome a cada gráfico individual, o que deve ser feito no *chunk* correspondente a cada um.\n\nPara isso, escolha um nome representativo e atribua a ele o resultado da análise utilizando o banco de dados, seguido pelo uso do operador *pipe* (%\\>%) para continuar a construção do gráfico.\n\nDepois de definir todos os gráficos separadamente, a combinação é feita utilizando seus nomes e conectando-os com o sinal de adição (+) ou com a barra vertical (\\|), dependendo da organização desejada (horizontal ou vertical).\n\nExemplo de uso do pacote `patchwork`:\n\n```{r}\nlibrary(ggplot2)\nlibrary(patchwork)\n\n#Simulando um conjunto de dados \nset.seed(123)\n\n\n# Simulando os dados\ndados_fitopatologia <- data.frame(\n  irrigacao = rep(c(\"Gotejamento\", \"Aspersão\", \"Sulco\"), each = 30),\n  umidade = rep(c(\"Alta\", \"Moderada\"), times = 45),\n  severidade = c(\n    rnorm(30, mean = 0.6, sd = 0.1),  # Gotejamento\n    rnorm(30, mean = 0.8, sd = 0.15), # Aspersão\n    rnorm(30, mean = 0.4, sd = 0.1)   # Sulco\n  )\n)\n\n# Gráfico 1: Boxplot\ngrafico1 <- dados_fitopatologia |>\n  ggplot(aes(x = irrigacao, y = severidade, fill = irrigacao)) +\n  geom_boxplot() +\n  labs(\n    title = \"Severidade por tipo de irrigação\",\n    x = \"Irrigação\",\n    y = \"Severidade\"\n  ) +\n  theme_minimal(base_size = 14) +\n  theme(\n    plot.title = element_text(size = 16, face = \"bold\", margin = margin(b = 10)),\n    axis.title.x = element_text(margin = margin(t = 10)),\n    axis.title.y = element_text(margin = margin(r = 10)),\n    plot.margin = margin(t = 15, r = 15, b = 15, l = 15)\n  )\n\n# Gráfico 2: Jitter por umidade\ngrafico2 <- dados_fitopatologia |>\n  ggplot(aes(x = irrigacao, y = severidade, color = umidade)) +\n  geom_jitter(width = 0.2, size = 2) +\n  labs(\n    title = \"Severidade por irrigação e umidade\",\n    x = \"Irrigação\",\n    y = \"Severidade\"\n  ) +\n  theme_minimal(base_size = 14) +\n  theme(\n    plot.title = element_text(size = 16, face = \"bold\", margin = margin(b = 10)),\n    axis.title.x = element_text(margin = margin(t = 10)),\n    axis.title.y = element_text(margin = margin(r = 10)),\n    plot.margin = margin(t = 15, r = 15, b = 15, l = 15)\n  )\n\n# Composição com patchwork\n(grafico1 | grafico2) + \n  plot_annotation(\n    title = \"Análise Fitopatológica: Severidade do Oídio em Tomate\",\n    theme = theme(\n      plot.title = element_text(size = 18, face = \"bold\", hjust = 0.5, margin = margin(b = 15))\n    )\n  )\n\n\n\n```\n\n### Gráficos com `facet_wrap()`\n\nA função `facet_wrap()` no `ggplot2` é usada para **dividir um gráfico em vários painéis** com base em uma variável categórica — ótimo para comparar subgrupos dentro dos dados.\n\n**Exemplo:**\n\n```{r}\n# Simulando os dados\n\nset.seed(123)\ndados_fitopatologia <- data.frame(\n  irrigacao = rep(c(\"Gotejamento\", \"Aspersão\", \"Sulco\"), each = 30),\n  umidade = rep(c(\"Alta\", \"Moderada\"), times = 45),\n  severidade = c(\n    rnorm(30, mean = 0.6, sd = 0.1),\n    rnorm(30, mean = 0.8, sd = 0.15),\n    rnorm(30, mean = 0.4, sd = 0.1)\n  )\n)\n\n# Gráfico com facet_wrap por nível de umidade\ngrafico_facetado <- ggplot(dados_fitopatologia, aes(x = irrigacao, y = severidade, fill = irrigacao)) +\n  geom_boxplot() +\n  facet_wrap(~ umidade) +  # Dividindo os gráficos por nível de umidade\n  labs(\n    title = \"Severidade da doença por tipo de irrigação e umidade\",\n    x = \"Tipo de Irrigação\",\n    y = \"Severidade\"\n  ) +\n  theme_minimal(base_size = 14) +\n  theme(\n    plot.title = element_text(size = 16, face = \"bold\", hjust = 0.5, margin = margin(b = 12)),\n    strip.text = element_text(size = 14, face = \"bold\"),  # Título de cada painel (Alta / Moderada)\n    axis.title.x = element_text(margin = margin(t = 10)),\n    axis.title.y = element_text(margin = margin(r = 10))\n  )\n\n# Mostrar o gráfico\ngrafico_facetado\n```\n","srcMarkdownNoYaml":"\n\nformat: html editor: visual ---\n\n# **Visualização de dados**\n\n## **Gráficos em ggplot**\n\nO `ggplot2` é o pacote usado para visualização dos dados. Ele pode ser carregado de forma independente `(library(ggplot2))` ou como parte do conjunto de pacotes do tidyverse.\n\nA construção de gráficos com o `ggplot2` segue uma lógica baseada em camadas, que são adicionadas à medida que se confecciona o gráfico, por isso que se usa o sinal de +, porque significa a adição de mais uma camada. A estrutura básica começa com a função `ggplot()`, que define a estética da distribuição dos dados que serão trabalhados. Em seguida, adiciona-se uma ou mais camadas com funções do tipo `geom_()`, que especificam o tipo de gráfico desejado, como pontos (`geom_point()`), linhas (`geom_line()`), barras (`geom_bar()`), entre outros.\n\nUsa-se o pipe (\\|\\>) para enfatizar uma sequência de comandos ou ações no chunk e para evitar adicionar o nome do data frame dentro da função `ggplot()`. O pipe deve ter sempre um espaço antes dele e, geralmente, deve ser seguido por uma nova linha.\n\n![](ggplot2.webp)\n\n## Exemplo de gráficos no ggplot2\n\n### **Importação de dados**\n\n```{r warning(FALSE)}\nlibrary(gsheet)\n\n# usou conjunto de dados do Magnésio, planilha online. Usou o gsheet para chamar os dados do link.\ndat_mg <- gsheet2tbl(\"https://docs.google.com/spreadsheets/d/1bq2N19DcZdtax2fQW9OHSGMR0X2__Z9T/edit?gid=983033137#gid=983033137\")\n```\n\n### Construindo o gráfico\n\nA primeira função para criar um ggplot é a função ggplot, que define o conjunto de dados a ser utilizado (o data frame onde os dados foram armazenados, ex. magnésio).\n\nA função `ggplot()` define o plano com os eixos x e y. Usamos a função aestetic (aes), para descrever como as variáveis são mapeadas (eixos x e y). Para adionar cor usa-se a função color = nome da cor, ou código. Ao incluir esta função dentro da função aes, dizemos ao ggplot que os pontos devem ser mapeados esteticamente utilizando cores para cada variavel.\n\n## Exemplos:\n\n### Gráficos de pontos\n\nA função `geom_point` define que a forma geométrica a ser utilizada é baseada em pontos, gerando um gráfico de dispersão. A função `alpha` trabalha com a tansparência.\n\n```{r}\nlibrary(ggplot2)\n\ndat_mg |> \n  ggplot (aes(trat, comp, color = trat))+\n  geom_point(alpha = 1)\n```\n\nA função `shape` é utilizada para adicionar diferentes formas ou tipos de marcadores para diferenciar as variáveis (exemplo: círculo e triângulo).\n\n```{r}\ndat_mg |>\n  ggplot(aes(trat, comp, shape = trat, color = trat))+\n  geom_point(alpha = 1)\n```\n\n### Gráficos de pontos + geom_jitter\n\nFrequentemente, em gráficos com muitos dados agrupados, ocorre a sobreposição de pontos, dificultando a visualização individual de cada observação. Para resolver esse problema, pode-se utilizar a função `geom_jitter()` no `ggplot2`.\n\nEssa função desloca ligeiramente os pontos de forma aleatória, permitindo visualizá-los de forma mais clara e separada. Para evitar uma dispersão excessiva dos dados, é possível controlar esse deslocamento por meio do argumento `width`, que define a largura do espalhamento horizontal. Isso garante que os pontos permaneçam próximos ao seu valor original, mas sem se sobrepor.\n\n```{r}\ndat_mg |>\n  ggplot(aes(trat, comp, shape = trat, color = trat))+\n  geom_point(alpha = 1)+\n  geom_jitter(width = 0.2)\n```\n\n### G**ráfico de barras**\n\nNeste exemplo, utilizamos os pacotes `ggplot2` e `dplyr` para gerar um gráfico de barras que representa a média da variável `comp`para cada tratamento (`trat`) no conjunto de dados `dat_mg`. Base `dat_mg` com as colunas `trat` (tratamentos) e `comp` (comprimento).\n\nPrimeiro, os dados são agrupados pela variável `trat` com a função `group_by()`, e em seguida é calculada a média da variável `comp` usando `summarise()`. O argumento `na.rm = TRUE` garante que valores ausentes (NA) sejam ignorados no cálculo da média.\n\nCom os dados resumidos, utilizamos a função `ggplot()` para construir o gráfico. A função `geom_bar()` com o argumento `stat = \"identity\"` indica que os valores do eixo y já foram previamente calculados (não devem ser contados ou somados automaticamente). O preenchimento das barras é definido por `fill = trat` e as bordas recebem cor preta para destacar as divisões.\n\nOs rótulos dos eixos são definidos com `labs()`, e o tema `theme_minimal()` é aplicado para um visual mais limpo e moderno.\n\nEste tipo de gráfico é útil para comparar médias entre diferentes grupos, facilitando a interpretação visual de experimentos com tratamentos ou categorias distintas.\n\n```{r}\nlibrary(ggplot2)\nlibrary(dplyr)\n\n# Calcular média por tratamento\nmedia_mg <- dat_mg |>\n  group_by(trat) |>\n  summarise(media_comp = mean(comp, na.rm = TRUE))\n\n# Gráfico de barras\nggplot(media_mg, aes(x = trat, y = media_comp, fill = trat)) +\n  geom_bar(stat = \"identity\", color = \"black\", width = 0.6) +\n  labs(x = \"Tratamento\", y = \"Média de Comprimento\") +\n  theme_minimal()\n\n```\n\n### **Gráfico de linhas**:\n\nNeste trecho de código, é criado um gráfico de linhas e pontos utilizando os dados de média por tratamento (`media_mg`), previamente calculados.\n\n```{r}\nmedia_mg$trat <- factor(media_mg$trat, levels = unique(media_mg$trat))\n\n# Criar gráfico de linhas com pontos\nggplot(media_mg, aes(x = trat, y = media_comp, group = 1)) +\n  geom_line(color = \"steelblue\", size = 1.2) +\n  geom_point(size = 3, shape = 21, fill = \"white\", color = \"steelblue\") +\n  labs(x = \"Tratamento\", y = \"Comprimento Médio\") +\n  theme_minimal()\n\n\n```\n\nÉ possível adicionar **título**, **subtítulo**, **rótulos dos eixos**, **legenda explicativa** e **fonte dos dados** usando a função `labs()`. Esses elementos enriquecem o gráfico, tornando-o mais informativo e interpretável, especialmente em relatórios, artigos e apresentações.\n\n```{r}\n# Gráfico de barras com informações adicionais\nggplot(media_mg, aes(x = trat, y = media_comp, fill = trat)) +\n  geom_bar(stat = \"identity\", color = \"black\", width = 0.6) +\n  labs(\n    title = \"Média de Comprimento por Tratamento\",\n    subtitle = \"Visualização comparativa das médias da variável 'comp'\",\n    x = \"Tratamento\",\n    y = \"Média de Comprimento\",\n    caption = \"Fonte: Dados experimentais - dat_mg\"\n  ) +\n  theme_minimal()\n```\n\n### Gráfico de Boxplot\n\nOs boxplots são gráficos muito úteis para analisar a distribuição de uma variável numérica, especialmente quando queremos comparar essa distribuição entre diferentes grupos (por exemplo, tratamentos experimentais).\n\nEsse tipo de gráfico resume visualmente medidas estatísticas importantes, como:\n\n-   Mediana (linha central da caixa);\n\n-   Quartis (limites superior e inferior da caixa);\n\n-   Valores máximos e mínimos dentro dos limites definidos;\n\n-   *Outliers* (valores discrepantes), que aparecem como pontos fora das “linhas” do boxplot.\n\nNo R, utilizamos a função `geom_boxplot()` dentro do pacote `ggplot2` para criar esse tipo de visualização. O eixo `x` deve conter uma variável categórica (como `trat`), e o eixo `y` uma variável numérica (como `comp`).\n\n```{r}\nlibrary(ggplot2)\n\n# Criar boxplot da variável 'comp' por tratamento\nggplot(dat_mg, aes(x = trat, y = comp, fill = trat)) +\n  geom_boxplot(outlier.color = \"red\", outlier.shape = 21, outlier.fill = \"white\") +\n  labs(\n    title = \"Distribuição da Variável 'comp' por Tratamento\",\n    subtitle = \"Boxplot representando a dispersão e tendência dos dados por grupo\",\n    x = \"Tratamento\",\n    y = \"Comprimento\",\n    caption = \"Fonte: Dados experimentais - dat_mg\"\n  ) +\n  theme_minimal()\n```\n\n### **Composição de gráficos com o pacote `Patchwork`**\n\nO pacote patchwork permite combinar diferentes gráficos criados com o `ggplot2` em uma única visualização. Após instalar e carregar o pacote, é necessário atribuir um nome a cada gráfico individual, o que deve ser feito no *chunk* correspondente a cada um.\n\nPara isso, escolha um nome representativo e atribua a ele o resultado da análise utilizando o banco de dados, seguido pelo uso do operador *pipe* (%\\>%) para continuar a construção do gráfico.\n\nDepois de definir todos os gráficos separadamente, a combinação é feita utilizando seus nomes e conectando-os com o sinal de adição (+) ou com a barra vertical (\\|), dependendo da organização desejada (horizontal ou vertical).\n\nExemplo de uso do pacote `patchwork`:\n\n```{r}\nlibrary(ggplot2)\nlibrary(patchwork)\n\n#Simulando um conjunto de dados \nset.seed(123)\n\n\n# Simulando os dados\ndados_fitopatologia <- data.frame(\n  irrigacao = rep(c(\"Gotejamento\", \"Aspersão\", \"Sulco\"), each = 30),\n  umidade = rep(c(\"Alta\", \"Moderada\"), times = 45),\n  severidade = c(\n    rnorm(30, mean = 0.6, sd = 0.1),  # Gotejamento\n    rnorm(30, mean = 0.8, sd = 0.15), # Aspersão\n    rnorm(30, mean = 0.4, sd = 0.1)   # Sulco\n  )\n)\n\n# Gráfico 1: Boxplot\ngrafico1 <- dados_fitopatologia |>\n  ggplot(aes(x = irrigacao, y = severidade, fill = irrigacao)) +\n  geom_boxplot() +\n  labs(\n    title = \"Severidade por tipo de irrigação\",\n    x = \"Irrigação\",\n    y = \"Severidade\"\n  ) +\n  theme_minimal(base_size = 14) +\n  theme(\n    plot.title = element_text(size = 16, face = \"bold\", margin = margin(b = 10)),\n    axis.title.x = element_text(margin = margin(t = 10)),\n    axis.title.y = element_text(margin = margin(r = 10)),\n    plot.margin = margin(t = 15, r = 15, b = 15, l = 15)\n  )\n\n# Gráfico 2: Jitter por umidade\ngrafico2 <- dados_fitopatologia |>\n  ggplot(aes(x = irrigacao, y = severidade, color = umidade)) +\n  geom_jitter(width = 0.2, size = 2) +\n  labs(\n    title = \"Severidade por irrigação e umidade\",\n    x = \"Irrigação\",\n    y = \"Severidade\"\n  ) +\n  theme_minimal(base_size = 14) +\n  theme(\n    plot.title = element_text(size = 16, face = \"bold\", margin = margin(b = 10)),\n    axis.title.x = element_text(margin = margin(t = 10)),\n    axis.title.y = element_text(margin = margin(r = 10)),\n    plot.margin = margin(t = 15, r = 15, b = 15, l = 15)\n  )\n\n# Composição com patchwork\n(grafico1 | grafico2) + \n  plot_annotation(\n    title = \"Análise Fitopatológica: Severidade do Oídio em Tomate\",\n    theme = theme(\n      plot.title = element_text(size = 18, face = \"bold\", hjust = 0.5, margin = margin(b = 15))\n    )\n  )\n\n\n\n```\n\n### Gráficos com `facet_wrap()`\n\nA função `facet_wrap()` no `ggplot2` é usada para **dividir um gráfico em vários painéis** com base em uma variável categórica — ótimo para comparar subgrupos dentro dos dados.\n\n**Exemplo:**\n\n```{r}\n# Simulando os dados\n\nset.seed(123)\ndados_fitopatologia <- data.frame(\n  irrigacao = rep(c(\"Gotejamento\", \"Aspersão\", \"Sulco\"), each = 30),\n  umidade = rep(c(\"Alta\", \"Moderada\"), times = 45),\n  severidade = c(\n    rnorm(30, mean = 0.6, sd = 0.1),\n    rnorm(30, mean = 0.8, sd = 0.15),\n    rnorm(30, mean = 0.4, sd = 0.1)\n  )\n)\n\n# Gráfico com facet_wrap por nível de umidade\ngrafico_facetado <- ggplot(dados_fitopatologia, aes(x = irrigacao, y = severidade, fill = irrigacao)) +\n  geom_boxplot() +\n  facet_wrap(~ umidade) +  # Dividindo os gráficos por nível de umidade\n  labs(\n    title = \"Severidade da doença por tipo de irrigação e umidade\",\n    x = \"Tipo de Irrigação\",\n    y = \"Severidade\"\n  ) +\n  theme_minimal(base_size = 14) +\n  theme(\n    plot.title = element_text(size = 16, face = \"bold\", hjust = 0.5, margin = margin(b = 12)),\n    strip.text = element_text(size = 14, face = \"bold\"),  # Título de cada painel (Alta / Moderada)\n    axis.title.x = element_text(margin = margin(t = 10)),\n    axis.title.y = element_text(margin = margin(r = 10))\n  )\n\n# Mostrar o gráfico\ngrafico_facetado\n```\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"engine":"knitr"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","css":["styles.css"],"toc":false,"include-after-body":[{"text":"<link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.0/font/bootstrap-icons.css\">\n"}],"include-in-header":[{"text":"<link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css\">\n<link href=\"https://fonts.googleapis.com/css2?family=Montserrat:wght@400;600&family=Playfair+Display:wght@700&display=swap\" rel=\"stylesheet\">\n"}],"output-file":"visualizando_dados.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","appendix-view-license":"View License","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words","listing-page-filter":"Filter","draft":"Draft"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.5.57","theme":"cosmo","title":"graficos"},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}