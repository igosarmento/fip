{"title":"Introdução","markdown":{"yaml":{"title":"Introdução","format":"html","editor":"visual"},"headingText":"Introdução ao R – Fundamentos da Análise de Dados","containsRefs":false,"markdown":"\n\n\n### Panorama geral do R e do RStudio®\n\nO **R** é uma linguagem de programação amplamente reconhecida por sua robustez em aplicações estatísticas, análise exploratória de dados e visualização gráfica. Desenvolvido sob licença de código aberto, o R dispõe de uma comunidade ativa e de um repositório vasto de pacotes especializados, o que o torna uma ferramenta central nas rotinas de pesquisa científica, bioestatística, epidemiologia, ciência de dados e áreas afins. Sua arquitetura orientada a objetos e a vetores permite manipulação eficiente de grandes conjuntos de dados e execução de análises complexas com relativa simplicidade.\n\nPara otimizar o uso do R, foi desenvolvido o **RStudio**, um ambiente de desenvolvimento integrado (IDE) que provê uma interface gráfica amigável e funcional, reunindo em uma mesma janela múltiplos painéis destinados à escrita e execução de scripts, à visualização de gráficos, à inspeção de objetos e ao gerenciamento de arquivos e pacotes. A interface promove uma organização intuitiva do fluxo de trabalho analítico e favorece a reproducibilidade das análises. O RStudio também conta com atualizações frequentes, notificando o usuário automaticamente quando uma nova versão está disponível.\n\nDentre os principais recursos oferecidos pelo RStudio, destacam-se:\n\n-    Estruturação e depuração de códigos de forma organizada;\n\n-    Geração de gráficos estáticos e interativos com recursos avançados de visualização;\n\n-    Elaboração de documentos reprodutíveis por meio da linguagem **R Markdown**;\n\n-    Desenvolvimento de interfaces gráficas interativas com **Shiny**;\n\n-    Gerenciamento eficiente de pacotes, projetos e diretórios de trabalho.\n\nO ingresso no ambiente R exige familiaridade com seus conceitos básicos e uma compreensão gradativa de sua lógica funcional. Nesse processo, a escolha de materiais didáticos de qualidade é essencial. Uma referência introdutória recomendada é o livro *Introdução à Ciência de Dados com R*, que apresenta, de forma sistemática, os principais fundamentos e práticas aplicadas à análise de dados por meio da linguagem R.\n\nA seguir, são apresentados os primeiros conceitos fundamentais para a construção de scripts no R, como a criação de objetos, utilização de funções, e estruturação de elementos como vetores e classes de dados.\n\n### Instalação do R e do RStudio\n\nPara utilizar o ambiente RStudio de forma plena, é necessário realizar a instalação prévia do interpretador R e, em seguida, da IDE RStudio:\n\n-    R (CRAN)\n\n-    RStudio Desktop\n\n### Objetos e funções\n\nNo R, o conceito de **objeto** é central. Objetos são estruturas que armazenam dados, podendo ser desde valores simples até estruturas mais complexas, como vetores, listas ou *data frames*. A criação de um objeto é realizada por meio do operador de atribuição `<-`, como ilustrado no exemplo abaixo:\n\n```{r}\na <- 1\n\n```\n\nNesse caso, o valor numérico `1` é atribuído ao objeto denominado `a`. Estruturas tabulares, como bases de dados, são geralmente armazenadas em objetos do tipo `data frame`, que organizam os dados em formato de colunas (variáveis) e linhas (observações).\n\nAlém dos objetos, **funções** são elementos essenciais na linguagem R. Funções representam conjuntos de instruções que executam tarefas específicas. Ao serem chamadas, recebem **argumentos**, que devem ser passados entre parênteses após o nome da função. Quando há múltiplos argumentos, estes devem ser separados por vírgulas.\n\n### Classes de dados\n\nO R reconhece diferentes **classes de objetos**, como numérico, lógico, fator e caractere. Ao trabalhar com **textos**, é necessário que os caracteres estejam entre aspas (simples ou duplas), de modo que o interpretador identifique aquele elemento como uma string literal, e não como uma referência a uma variável ou função previamente definida.\n\n### Vetores\n\n**Vetores** são estruturas fundamentais em R, utilizadas para armazenar coleções de elementos homogêneos, isto é, do mesmo tipo (numéricos, lógicos ou caracteres). A função `c()` (de *combine*) é a forma padrão de criação de vetores:\n\n```{r}\nvetor1 <- c(1, 2, 3, 20, 50)\n\n1:5\n```\n\n### Valores ausentes em R: uso do `NA`\n\nEm ambientes de análise de dados, é comum que conjuntos de informações contenham lacunas — valores que, por diferentes razões, não foram observados, registrados ou informados. No R, tais situações são representadas por um valor especial denominado `NA` (*Not Available*), o qual indica explicitamente a ausência de informação em uma determinada célula ou posição de um vetor, coluna ou estrutura de dados.\n\nA presença de `NA` não invalida a existência da variável, mas sinaliza que, naquele ponto específico, o conteúdo é desconhecido ou não mensurado. Em análises estatísticas, o correto tratamento de dados faltantes é crucial, uma vez que funções de cálculo ou modelagem podem ser sensíveis à presença desses elementos, resultando em erros ou estimativas distorcidas se não forem devidamente tratados com argumentos como `na.rm = TRUE` ou métodos de imputação.\n\n### Encadeamento de comandos: o operador pipe\n\nPara melhorar a legibilidade e a fluidez da escrita de códigos no R, foram desenvolvidos operadores que permitem **encadear múltiplas funções** de maneira mais linear e intuitiva. Esses operadores são conhecidos como **pipes**, e os mais utilizados são `%>%` (do pacote `magrittr`) e `|>` (nativo a partir da versão 4.1 do R).\n\nO funcionamento dos pipes consiste em **transmitir o resultado de uma operação como argumento principal da função seguinte**, permitindo que o raciocínio de transformação de dados seja lido da esquerda para a direita, o que aproxima a estrutura do código da lógica do pensamento humano.\n\n### Comentários no código\n\nA escrita de **comentários** é uma prática essencial na programação científica. No R, qualquer trecho precedido pelo símbolo `#` é ignorado na execução do código, funcionando como uma anotação que serve para documentar o que determinada linha ou bloco está realizando.\n\nComentários bem elaborados facilitam a manutenção, interpretação e reaproveitamento de scripts, especialmente em contextos colaborativos ou em projetos de longo prazo. Além disso, tornam o código mais acessível para quem está iniciando na linguagem ou revisitando uma análise antiga.\n","srcMarkdownNoYaml":"\n\n# Introdução ao R – Fundamentos da Análise de Dados\n\n### Panorama geral do R e do RStudio®\n\nO **R** é uma linguagem de programação amplamente reconhecida por sua robustez em aplicações estatísticas, análise exploratória de dados e visualização gráfica. Desenvolvido sob licença de código aberto, o R dispõe de uma comunidade ativa e de um repositório vasto de pacotes especializados, o que o torna uma ferramenta central nas rotinas de pesquisa científica, bioestatística, epidemiologia, ciência de dados e áreas afins. Sua arquitetura orientada a objetos e a vetores permite manipulação eficiente de grandes conjuntos de dados e execução de análises complexas com relativa simplicidade.\n\nPara otimizar o uso do R, foi desenvolvido o **RStudio**, um ambiente de desenvolvimento integrado (IDE) que provê uma interface gráfica amigável e funcional, reunindo em uma mesma janela múltiplos painéis destinados à escrita e execução de scripts, à visualização de gráficos, à inspeção de objetos e ao gerenciamento de arquivos e pacotes. A interface promove uma organização intuitiva do fluxo de trabalho analítico e favorece a reproducibilidade das análises. O RStudio também conta com atualizações frequentes, notificando o usuário automaticamente quando uma nova versão está disponível.\n\nDentre os principais recursos oferecidos pelo RStudio, destacam-se:\n\n-    Estruturação e depuração de códigos de forma organizada;\n\n-    Geração de gráficos estáticos e interativos com recursos avançados de visualização;\n\n-    Elaboração de documentos reprodutíveis por meio da linguagem **R Markdown**;\n\n-    Desenvolvimento de interfaces gráficas interativas com **Shiny**;\n\n-    Gerenciamento eficiente de pacotes, projetos e diretórios de trabalho.\n\nO ingresso no ambiente R exige familiaridade com seus conceitos básicos e uma compreensão gradativa de sua lógica funcional. Nesse processo, a escolha de materiais didáticos de qualidade é essencial. Uma referência introdutória recomendada é o livro *Introdução à Ciência de Dados com R*, que apresenta, de forma sistemática, os principais fundamentos e práticas aplicadas à análise de dados por meio da linguagem R.\n\nA seguir, são apresentados os primeiros conceitos fundamentais para a construção de scripts no R, como a criação de objetos, utilização de funções, e estruturação de elementos como vetores e classes de dados.\n\n### Instalação do R e do RStudio\n\nPara utilizar o ambiente RStudio de forma plena, é necessário realizar a instalação prévia do interpretador R e, em seguida, da IDE RStudio:\n\n-    R (CRAN)\n\n-    RStudio Desktop\n\n### Objetos e funções\n\nNo R, o conceito de **objeto** é central. Objetos são estruturas que armazenam dados, podendo ser desde valores simples até estruturas mais complexas, como vetores, listas ou *data frames*. A criação de um objeto é realizada por meio do operador de atribuição `<-`, como ilustrado no exemplo abaixo:\n\n```{r}\na <- 1\n\n```\n\nNesse caso, o valor numérico `1` é atribuído ao objeto denominado `a`. Estruturas tabulares, como bases de dados, são geralmente armazenadas em objetos do tipo `data frame`, que organizam os dados em formato de colunas (variáveis) e linhas (observações).\n\nAlém dos objetos, **funções** são elementos essenciais na linguagem R. Funções representam conjuntos de instruções que executam tarefas específicas. Ao serem chamadas, recebem **argumentos**, que devem ser passados entre parênteses após o nome da função. Quando há múltiplos argumentos, estes devem ser separados por vírgulas.\n\n### Classes de dados\n\nO R reconhece diferentes **classes de objetos**, como numérico, lógico, fator e caractere. Ao trabalhar com **textos**, é necessário que os caracteres estejam entre aspas (simples ou duplas), de modo que o interpretador identifique aquele elemento como uma string literal, e não como uma referência a uma variável ou função previamente definida.\n\n### Vetores\n\n**Vetores** são estruturas fundamentais em R, utilizadas para armazenar coleções de elementos homogêneos, isto é, do mesmo tipo (numéricos, lógicos ou caracteres). A função `c()` (de *combine*) é a forma padrão de criação de vetores:\n\n```{r}\nvetor1 <- c(1, 2, 3, 20, 50)\n\n1:5\n```\n\n### Valores ausentes em R: uso do `NA`\n\nEm ambientes de análise de dados, é comum que conjuntos de informações contenham lacunas — valores que, por diferentes razões, não foram observados, registrados ou informados. No R, tais situações são representadas por um valor especial denominado `NA` (*Not Available*), o qual indica explicitamente a ausência de informação em uma determinada célula ou posição de um vetor, coluna ou estrutura de dados.\n\nA presença de `NA` não invalida a existência da variável, mas sinaliza que, naquele ponto específico, o conteúdo é desconhecido ou não mensurado. Em análises estatísticas, o correto tratamento de dados faltantes é crucial, uma vez que funções de cálculo ou modelagem podem ser sensíveis à presença desses elementos, resultando em erros ou estimativas distorcidas se não forem devidamente tratados com argumentos como `na.rm = TRUE` ou métodos de imputação.\n\n### Encadeamento de comandos: o operador pipe\n\nPara melhorar a legibilidade e a fluidez da escrita de códigos no R, foram desenvolvidos operadores que permitem **encadear múltiplas funções** de maneira mais linear e intuitiva. Esses operadores são conhecidos como **pipes**, e os mais utilizados são `%>%` (do pacote `magrittr`) e `|>` (nativo a partir da versão 4.1 do R).\n\nO funcionamento dos pipes consiste em **transmitir o resultado de uma operação como argumento principal da função seguinte**, permitindo que o raciocínio de transformação de dados seja lido da esquerda para a direita, o que aproxima a estrutura do código da lógica do pensamento humano.\n\n### Comentários no código\n\nA escrita de **comentários** é uma prática essencial na programação científica. No R, qualquer trecho precedido pelo símbolo `#` é ignorado na execução do código, funcionando como uma anotação que serve para documentar o que determinada linha ou bloco está realizando.\n\nComentários bem elaborados facilitam a manutenção, interpretação e reaproveitamento de scripts, especialmente em contextos colaborativos ou em projetos de longo prazo. Além disso, tornam o código mais acessível para quem está iniciando na linguagem ou revisitando uma análise antiga.\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":true,"warning":false,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"engine":"knitr"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":true,"code-overflow":"scroll","code-link":false,"code-line-numbers":true,"code-tools":true,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","css":["styles.css"],"toc":true,"output-file":"introducao.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","appendix-view-license":"View License","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words","listing-page-filter":"Filter","draft":"Draft"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.5.57","author":"Igo Sarmento da Silva","editor":"visual","theme":{"light":"minty","dark":"darkly"},"message":false,"title":"Introdução"},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}